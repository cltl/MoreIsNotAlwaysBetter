<?xml version='1.0' encoding='UTF-8'?>
<corpus lang="en">
  <lexelt item="argument.n" pos="NN">
    <instance id="Argument-argument-0-111-3" docsrc="Argument">
      <context> <head>The</head> difference is in the intent : an argument attempts to settle whether or not some claim is true , and an explanation attempts to provide understanding of the event . Note , that by subsuming the specific event ( of Fred 's cat scratching ) as an instance of the general rule that " animals scratch themselves when they have fleas " , Joe will no longer wonder why Fred 's cat is scratching itself . Arguments address problems of belief , explanations address problems of understanding .</context>
    </instance>
    <instance id="Argument-argument-0-111-5" docsrc="Argument">
      <context> <head>Arguments</head> address problems of belief , explanations address problems of understanding . Also note that in the argument above , the statement , " Fred 's cat has fleas " is up for debate ( i.e. is a claim ) , but in the explanation , the statement , " Fred 's cat has fleas " is assumed to be true ( unquestioned at this time ) and just needs explaining . Arguments and explanations largely resemble each other in rhetorical use .</context>
    </instance>
    <instance id="Argument-argument-0-162-2" docsrc="Argument">
      <context> <head>Martin</head> , Brian . The Controversy Manual ( Sparsnäs , Sweden : Irene Publishing , 2014 ) . Argument at PhilPapers</context>
    </instance>
    <instance id="Argument-argument-0-166-1" docsrc="Argument">
      <context> <head>The</head> Controversy Manual ( Sparsnäs , Sweden : Irene Publishing , 2014 ) . Argument at PhilPapers Argument at the Indiana Philosophy Ontology Project</context>
    </instance>
    <instance id="Argument-argument-0-22-2" docsrc="Argument">
      <context> <head>An</head> inductive argument , on the other hand , asserts that the truth of the conclusion is supported to some degree of probability by the premises . For example , given that the U.S. military budget is the largest in the world ( premise=true ) , then it is probable that it will remain so for the next 10 years ( conclusion=true ) . Arguments that involve predictions are inductive , as the future is uncertain .</context>
    </instance>
    <instance id="Argument-argument-0-70-2" docsrc="Argument">
      <context> <head>If</head> an expert says that a proposition is true , this provides a reason for tentatively accepting it , in the absence of stronger reasons to doubt it . But suppose that evidence of financial gain suggests that the expert is biased , for example by evidence showing that he will gain financially from his claim . Argument by analogy may be thought of as argument from the particular to particular .</context>
    </instance>
    <instance id="Argument-argument-0-81-2" docsrc="Argument">
      <context> <head>===</head> In informal logic === Argument is an informal calculus , relating an effort to be performed or sum to be spent , to possible future gain , either economic or moral .</context>
    </instance>
    <instance id="Argument-argument-0-96-1" docsrc="Argument">
      <context> <head>A</head> proof changes our knowledge ; an argument compels us to act . ==== Logical status ==== Argument does not belong to logic , because it is connected to a real person , a real event , and a real effort to be made .</context>
    </instance>
    <instance id="Argument-argument-1-100-3" docsrc="Argument">
      <context> If <head>,</head> in the first case,(1 ) John has no money , or will die the next year , he will not be interested in buying the stock . If , in the second case ( 2 ) she is too heavy , or too old , she will not be interested in studying and becoming a dancer . The argument is not logical , but profitable .</context>
    </instance>
    <instance id="Argument-argument-1-100-4" docsrc="Argument">
      <context> If <head>,</head> in the second case ( 2 ) she is too heavy , or too old , she will not be interested in studying and becoming a dancer . The argument is not logical , but profitable . While arguments attempt to show that something was , is , will be , or should be the case , explanations try to show why or how something is or will be .</context>
    </instance>
    <instance id="Argument-argument-1-124-7" docsrc="Argument">
      <context> It <head>is</head> not being claimed that I drank is logically entailed by I was thirsty . The therefore in this sentence indicates for that reason not it follows that . Elliptical arguments</context>
    </instance>
    <instance id="Argument-argument-1-167-1" docsrc="Argument">
      <context> Argument <head>at</head> PhilPapers Argument at the Indiana Philosophy Ontology Project " Argument " .</context>
    </instance>
    <instance id="Argument-argument-1-2-2" docsrc="Argument">
      <context> The <head>standards</head> and criteria used in evaluating arguments and their forms of reasoning are studied in logic . Ways of formulating arguments effectively are studied in rhetoric ( see also : argumentation theory ) . An argument in a formal language shows the logical form of the symbolically represented or natural language arguments obtained by its interpretations .</context>
    </instance>
    <instance id="Argument-argument-1-2-3" docsrc="Argument">
      <context> Ways <head>of</head> formulating arguments effectively are studied in rhetoric ( see also : argumentation theory ) . An argument in a formal language shows the logical form of the symbolically represented or natural language arguments obtained by its interpretations . Informal arguments as studied in informal logic , are presented in ordinary language and are intended for everyday discourse .</context>
    </instance>
    <instance id="Argument-argument-1-32-1" docsrc="Argument">
      <context> The <head>military</head> budget argument example above is a strong , cogent argument . === Validity === Deductive arguments may be either valid or invalid .</context>
    </instance>
    <instance id="Argument-argument-1-34-2" docsrc="Argument">
      <context> Deductive <head>arguments</head> may be either valid or invalid . If an argument is valid , it is a valid deduction , and if its premises are true , the conclusion must be true : a valid argument can not have true premises and a false conclusion . An argument is formally valid if and only if the denial of the conclusion is incompatible with accepting all the premises .</context>
    </instance>
    <instance id="Argument-argument-1-42-1" docsrc="Argument">
      <context> : <head>Valid</head> argument ; if the premises are true the conclusion must be true . Some Greeks are logicians and some logicians are tiresome ; therefore , some Greeks are tiresome . Invalid argument : the tiresome logicians might all be Romans ( for example ) .</context>
    </instance>
    <instance id="Argument-argument-1-43-1" docsrc="Argument">
      <context> Invalid <head>argument</head> : the tiresome logicians might all be Romans ( for example ) . Either we are all doomed or we are all saved ; we are not all saved ; therefore , we are all doomed . Valid argument ; the premises entail the conclusion .</context>
    </instance>
    <instance id="Argument-argument-1-45-3" docsrc="Argument">
      <context> Some <head>herbivores</head> are zebras . Therefore , some people are zebras . Invalid argument , as it is possible that the premises be true and the conclusion false .</context>
    </instance>
    <instance id="Argument-argument-1-7-3" docsrc="Argument">
      <context> Conversely <head>,</head> formal arguments are studied in formal logic ( historically called symbolic logic , more commonly referred to as mathematical logic today ) and are expressed in a formal language . Informal logic may be said to emphasize the study of argumentation , whereas formal logic emphasizes implication and inference . Informal arguments are sometimes implicit .</context>
    </instance>
    <instance id="Argument-argument-1-74-1" docsrc="Argument">
      <context> But <head>suppose</head> that evidence of financial gain suggests that the expert is biased , for example by evidence showing that he will gain financially from his claim . Argument by analogy may be thought of as argument from the particular to particular . An argument by analogy may use a particular truth in a premise to argue towards a similar particular truth in the conclusion .</context>
    </instance>
    <instance id="Argument-argument-1-91-1" docsrc="Argument">
      <context> You <head>should</head> not smoke ( individual action , individual decision ) because smoking is harmful ( generally accepted wisdom that health is good ) . The argument is neither a ) advice nor b ) moral or economical judgement , but the connection between the two .</context>
    </instance>
    <instance id="Argument-argument-1-93-1" docsrc="Argument">
      <context> because <head>smoking</head> is harmful ( generally accepted wisdom that health is good ) . The argument is neither a ) advice nor b ) moral or economical judgement , but the connection between the two . An argument always uses the connective because .</context>
    </instance>
    <instance id="Argument-argument-1-93-2" docsrc="Argument">
      <context> The <head>argument</head> is neither a ) advice nor b ) moral or economical judgement , but the connection between the two . An argument always uses the connective because . An argument is not an explanation .</context>
    </instance>
    <instance id="Argument-argument-1-93-4" docsrc="Argument">
      <context> An <head>argument</head> is not an explanation . It does not connect two events , cause and effect , which already took place , but a possible individual action and its beneficial outcome . An argument is not a proof .</context>
    </instance>
    <instance id="Argument-argument-10-93-5" docsrc="Argument">
      <context> It does not connect two events , cause and effect <head>,</head> which already took place , but a possible individual action and its beneficial outcome . An argument is not a proof . A proof is a logical and cognitive concept ; an argument is a praxeologic concept .</context>
    </instance>
    <instance id="Argument-argument-11-124-4" docsrc="Argument">
      <context> In English the words therefore , so , because and hence <head>typically</head> separate the premises from the conclusion of an argument , but this is not necessarily so . Thus : Socrates is a man , all men are mortal therefore Socrates is mortal is clearly an argument ( a valid one at that ) , because it is clear it is asserted that Socrates is mortal follows from the preceding statements . However I was thirsty and therefore I drank is NOT an argument , despite its appearance .</context>
    </instance>
    <instance id="Argument-argument-11-24-2" docsrc="Argument">
      <context> A strong argument is said to be cogent if it has <head>all</head> true premises . Otherwise , the argument is uncogent . The military budget argument example above is a strong , cogent argument .</context>
    </instance>
    <instance id="Argument-argument-11-69-1" docsrc="Argument">
      <context> Therefore , Tweedy ( probably ) flies . Each scheme is <head>associated</head> to a set of critical questions , namely criteria for assessing dialectically the reasonableness and acceptability of an argument . The matching critical questions are the standard ways of casting the argument into doubt .</context>
    </instance>
    <instance id="Argument-argument-12-147-1" docsrc="Argument">
      <context> K. R. Popper Objective Knowledge ; An Evolutionary Approach , Oxford : <head>Clarendon</head> Press , 1972 . L. S. Stebbing , A Modern Introduction to Logic , Methuen and Co. , 1948 . An account of logic that covers the classic topics of logic and argument while carefully considering modern developments in logic .</context>
    </instance>
    <instance id="Argument-argument-12-149-1" docsrc="Argument">
      <context> Douglas Walton , Informal Logic : A Handbook for Critical Argumentation , <head>Cambridge</head> , 1998 . Walton , Douglas ; Christopher Reed ; Fabrizio Macagno , Argumentation Schemes , New York : Cambridge University Press , 2008 . Carlos Chesñevar , Ana Maguitman and Ronald Loui , Logical Models of Argument , ACM Computing Surveys , vol .</context>
    </instance>
    <instance id="Argument-argument-12-36-3" docsrc="Argument">
      <context> The validity of an argument is not a guarantee of the truth <head>of</head> its conclusion . Under a given interpretation , a valid argument may have false premises that render it inconclusive : the conclusion of a valid argument with one or more false premises may be either true or false . Logic seeks to discover the valid forms , the forms that make arguments valid .</context>
    </instance>
    <instance id="Argument-argument-13-113-1" docsrc="Argument">
      <context> There are several reasons for this difficulty . People often are not themselves <head>clear</head> on whether they are arguing for or explaining something . The same types of words and phrases are used in presenting explanations and arguments .</context>
    </instance>
    <instance id="Argument-argument-13-115-1" docsrc="Argument">
      <context> The same types of words and phrases are used in presenting explanations and <head>arguments</head> . The terms ' explain ' or ' explanation , ' et cetera are frequently used in arguments . Explanations are often used within arguments and presented so as to serve as arguments .</context>
    </instance>
    <instance id="Argument-argument-13-37-2" docsrc="Argument">
      <context> Logic seeks to discover the valid forms , the forms that make arguments <head>valid</head> . A form of argument is valid if and only if the conclusion is true under all interpretations of that argument in which the premises are true . Since the validity of an argument depends solely on its form , an argument can be shown to be invalid by showing that its form is invalid .</context>
    </instance>
    <instance id="Argument-argument-14-110-2" docsrc="Argument">
      <context> While arguments attempt to show that something was , is , will be , <head>or</head> should be the case , explanations try to show why or how something is or will be . If Fred and Joe address the issue of whether or not Fred 's cat has fleas , Joe may state : " Fred , your cat has fleas . Observe , the cat is scratching right now . " Joe has made an argument that the cat has fleas .</context>
    </instance>
    <instance id="Argument-argument-14-37-3" docsrc="Argument">
      <context> A form of argument is valid if and only if the conclusion is true <head>under</head> all interpretations of that argument in which the premises are true . Since the validity of an argument depends solely on its form , an argument can be shown to be invalid by showing that its form is invalid . This can be done by giving a counter example of the same form of argument with premises that are true under a given interpretation , but a conclusion that is false under that interpretation .</context>
    </instance>
    <instance id="Argument-argument-15-137-1" docsrc="Argument">
      <context> p. 74 . Robert Audi , Epistemology , Routledge , 1998 . Particularly relevant is <head>Chapter</head> 6 , which explores the relationship between knowledge , inference and argument .</context>
    </instance>
    <instance id="Argument-argument-16-114-1" docsrc="Argument">
      <context> People often are not themselves clear on whether they are arguing for or explaining something . <head>The</head> same types of words and phrases are used in presenting explanations and arguments . The terms ' explain ' or ' explanation , ' et cetera are frequently used in arguments .</context>
    </instance>
    <instance id="Argument-argument-17-2-2" docsrc="Argument">
      <context> The standards and criteria used in evaluating arguments and their forms of reasoning are studied in logic <head>.</head> Ways of formulating arguments effectively are studied in rhetoric ( see also : argumentation theory ) . An argument in a formal language shows the logical form of the symbolically represented or natural language arguments obtained by its interpretations .</context>
    </instance>
    <instance id="Argument-argument-18-124-3" docsrc="Argument">
      <context> Secondly it must be asserted that the conclusion follows from the premises . In English the words therefore <head>,</head> so , because and hence typically separate the premises from the conclusion of an argument , but this is not necessarily so . Thus : Socrates is a man , all men are mortal therefore Socrates is mortal is clearly an argument ( a valid one at that ) , because it is clear it is asserted that Socrates is mortal follows from the preceding statements .</context>
    </instance>
    <instance id="Argument-argument-19-0-2" docsrc="Argument">
      <context> In logic and philosophy , an argument is a series of statements typically used to persuade someone of something <head>or</head> to present reasons for accepting a conclusion . The general form of an argument in a natural language is that of premises ( typically in the form of propositions , statements or sentences ) in support of a claim : the conclusion . The structure of some arguments can also be set out in a formal language , and formally defined " arguments " can be made independently of natural language arguments , as in math , logic , and computer science .</context>
    </instance>
    <instance id="Argument-argument-19-17-6" docsrc="Argument">
      <context> In determining validity , the structure of the argument is essential to the determination , not the actual truth <head>values</head> . For example , consider the argument that because bats can fly ( premise=true ) , and all flying creatures are birds ( premise=false ) , therefore bats are birds ( conclusion=false ) . If we assume the premises are true , the conclusion follows necessarily , and thus it is a valid argument .</context>
    </instance>
    <instance id="Argument-argument-19-37-1" docsrc="Argument">
      <context> Under a given interpretation , a valid argument may have false premises that render it inconclusive : the conclusion <head>of</head> a valid argument with one or more false premises may be either true or false . Logic seeks to discover the valid forms , the forms that make arguments valid . A form of argument is valid if and only if the conclusion is true under all interpretations of that argument in which the premises are true .</context>
    </instance>
    <instance id="Argument-argument-19-38-1" docsrc="Argument">
      <context> In informal logic this is called a counter argument . The form of argument can be shown by the <head>use</head> of symbols . For each argument form , there is a corresponding statement form , called a corresponding conditional , and an argument form is valid if and only its corresponding conditional is a logical truth .</context>
    </instance>
    <instance id="Argument-argument-2-15-1" docsrc="Argument">
      <context> That is <head>,</head> the rational structure –the relationship of claims , premises , warrants , relations of implication , and conclusion –is not always spelled out and immediately visible and must sometimes be made explicit by analysis . === Deductive arguments === A deductive argument is said to be valid or invalid .</context>
    </instance>
    <instance id="Argument-argument-2-18-2" docsrc="Argument">
      <context> If a <head>deductive</head> argument is valid and its premises are all true , then it is also referred to as sound . Otherwise , it is unsound , as in the " bats are birds " example . === Inductive arguments ===</context>
    </instance>
    <instance id="Argument-argument-2-21-1" docsrc="Argument">
      <context> Otherwise , <head>it</head> is unsound , as in the " bats are birds " example . === Inductive arguments === An inductive argument , on the other hand , asserts that the truth of the conclusion is supported to some degree of probability by the premises .</context>
    </instance>
    <instance id="Argument-argument-2-22-3" docsrc="Argument">
      <context> For example <head>,</head> given that the U.S. military budget is the largest in the world ( premise=true ) , then it is probable that it will remain so for the next 10 years ( conclusion=true ) . Arguments that involve predictions are inductive , as the future is uncertain . An inductive argument is said to be strong or weak .</context>
    </instance>
    <instance id="Argument-argument-2-23-4" docsrc="Argument">
      <context> If so <head>,</head> the argument is strong . Otherwise , it is weak . A strong argument is said to be cogent if it has all true premises .</context>
    </instance>
    <instance id="Argument-argument-2-34-1" docsrc="Argument">
      <context> === Validity <head>===</head> Deductive arguments may be either valid or invalid . If an argument is valid , it is a valid deduction , and if its premises are true , the conclusion must be true : a valid argument can not have true premises and a false conclusion .</context>
    </instance>
    <instance id="Argument-argument-2-38-1" docsrc="Argument">
      <context> In informal <head>logic</head> this is called a counter argument . The form of argument can be shown by the use of symbols . For each argument form , there is a corresponding statement form , called a corresponding conditional , and an argument form is valid if and only its corresponding conditional is a logical truth .</context>
    </instance>
    <instance id="Argument-argument-2-41-1" docsrc="Argument">
      <context> Some examples <head>:</head> All Greeks are human and all humans are mortal ; therefore , all Greeks are mortal . : Valid argument ; if the premises are true the conclusion must be true .</context>
    </instance>
    <instance id="Argument-argument-2-51-2" docsrc="Argument">
      <context> === Soundness <head>===</head> A sound argument is a valid argument whose conclusion follows from its premise(s ) , and the premise(s ) of which is/are true .</context>
    </instance>
    <instance id="Argument-argument-2-7-5" docsrc="Argument">
      <context> Informal arguments <head>are</head> sometimes implicit . That is , the rational structure –the relationship of claims , premises , warrants , relations of implication , and conclusion –is not always spelled out and immediately visible and must sometimes be made explicit by analysis . === Deductive arguments ===</context>
    </instance>
    <instance id="Argument-argument-20-124-2" docsrc="Argument">
      <context> In Logic types of fallacy are firmly described thus : First the premises and the conclusion must be statements , <head>capable</head> of being true or false . Secondly it must be asserted that the conclusion follows from the premises . In English the words therefore , so , because and hence typically separate the premises from the conclusion of an argument , but this is not necessarily so .</context>
    </instance>
    <instance id="Argument-argument-22-36-2" docsrc="Argument">
      <context> The validity of an argument depends , however , not on the actual truth or falsity of its premises and conclusion , <head>but</head> solely on whether or not the argument has a valid logical form . The validity of an argument is not a guarantee of the truth of its conclusion . Under a given interpretation , a valid argument may have false premises that render it inconclusive : the conclusion of a valid argument with one or more false premises may be either true or false .</context>
    </instance>
    <instance id="Argument-argument-22-66-1" docsrc="Argument">
      <context> Birds generally fly . Therefore , Tweedy ( probably ) flies . Each scheme is associated to a set of critical questions <head>,</head> namely criteria for assessing dialectically the reasonableness and acceptability of an argument .</context>
    </instance>
    <instance id="Argument-argument-27-34-1" docsrc="Argument">
      <context> === Validity === Deductive arguments may be either valid or invalid . If an argument is valid , it is a valid deduction , and if its <head>premises</head> are true , the conclusion must be true : a valid argument can not have true premises and a false conclusion .</context>
    </instance>
    <instance id="Argument-argument-28-0-2" docsrc="Argument">
      <context> In logic and philosophy , an argument is a series of statements typically used to persuade someone of something or to present reasons for accepting a conclusion . <head>The</head> general form of an argument in a natural language is that of premises ( typically in the form of propositions , statements or sentences ) in support of a claim : the conclusion . The structure of some arguments can also be set out in a formal language , and formally defined " arguments " can be made independently of natural language arguments , as in math , logic , and computer science .</context>
    </instance>
    <instance id="Argument-argument-29-35-1" docsrc="Argument">
      <context> If an argument is valid , it is a valid deduction , and if its premises are true , the conclusion must be true : a valid argument can <head>not</head> have true premises and a false conclusion . An argument is formally valid if and only if the denial of the conclusion is incompatible with accepting all the premises . The validity of an argument depends , however , not on the actual truth or falsity of its premises and conclusion , but solely on whether or not the argument has a valid logical form .</context>
    </instance>
    <instance id="Argument-argument-3-110-4" docsrc="Argument">
      <context> Observe , the <head>cat</head> is scratching right now . " Joe has made an argument that the cat has fleas . However , if Joe asks Fred , " Why is your cat scratching itself ? " the explanation , " ... because it has fleas . " provides understanding . Both the above argument and explanation require knowing the generalities that a ) fleas often cause itching , and b ) that one often scratches to relieve itching .</context>
    </instance>
    <instance id="Argument-argument-3-17-7" docsrc="Argument">
      <context> For example , <head>consider</head> the argument that because bats can fly ( premise=true ) , and all flying creatures are birds ( premise=false ) , therefore bats are birds ( conclusion=false ) . If we assume the premises are true , the conclusion follows necessarily , and thus it is a valid argument . If a deductive argument is valid and its premises are all true , then it is also referred to as sound .</context>
    </instance>
    <instance id="Argument-argument-3-2-1" docsrc="Argument">
      <context> The structure of <head>some</head> arguments can also be set out in a formal language , and formally defined " arguments " can be made independently of natural language arguments , as in math , logic , and computer science . The standards and criteria used in evaluating arguments and their forms of reasoning are studied in logic . Ways of formulating arguments effectively are studied in rhetoric ( see also : argumentation theory ) .</context>
    </instance>
    <instance id="Argument-argument-3-24-1" docsrc="Argument">
      <context> Otherwise , it <head>is</head> weak . A strong argument is said to be cogent if it has all true premises . Otherwise , the argument is uncogent .</context>
    </instance>
    <instance id="Argument-argument-3-24-2" docsrc="Argument">
      <context> A strong argument <head>is</head> said to be cogent if it has all true premises . Otherwise , the argument is uncogent . The military budget argument example above is a strong , cogent argument .</context>
    </instance>
    <instance id="Argument-argument-3-37-1" docsrc="Argument">
      <context> Under a given <head>interpretation</head> , a valid argument may have false premises that render it inconclusive : the conclusion of a valid argument with one or more false premises may be either true or false . Logic seeks to discover the valid forms , the forms that make arguments valid . A form of argument is valid if and only if the conclusion is true under all interpretations of that argument in which the premises are true .</context>
    </instance>
    <instance id="Argument-argument-3-37-5" docsrc="Argument">
      <context> This can be <head>done</head> by giving a counter example of the same form of argument with premises that are true under a given interpretation , but a conclusion that is false under that interpretation . In informal logic this is called a counter argument . The form of argument can be shown by the use of symbols .</context>
    </instance>
    <instance id="Argument-argument-3-7-1" docsrc="Argument">
      <context> An argument in <head>a</head> formal language shows the logical form of the symbolically represented or natural language arguments obtained by its interpretations . Informal arguments as studied in informal logic , are presented in ordinary language and are intended for everyday discourse . Conversely , formal arguments are studied in formal logic ( historically called symbolic logic , more commonly referred to as mathematical logic today ) and are expressed in a formal language .</context>
    </instance>
    <instance id="Argument-argument-30-74-2" docsrc="Argument">
      <context> Argument by analogy may be thought of as argument from the particular to particular . An argument by analogy may use a particular truth in a premise to argue towards <head>a</head> similar particular truth in the conclusion . For example , if A. Plato was mortal , and B. Socrates was like Plato in other respects , then asserting that C. Socrates was mortal is an example of argument by analogy because the reasoning employed in it proceeds from a particular truth in a premise ( Plato was mortal ) to a similar particular truth in the conclusion , namely that Socrates was mortal .</context>
    </instance>
    <instance id="Argument-argument-4-0-2" docsrc="Argument">
      <context> In logic and philosophy <head>,</head> an argument is a series of statements typically used to persuade someone of something or to present reasons for accepting a conclusion . The general form of an argument in a natural language is that of premises ( typically in the form of propositions , statements or sentences ) in support of a claim : the conclusion . The structure of some arguments can also be set out in a formal language , and formally defined " arguments " can be made independently of natural language arguments , as in math , logic , and computer science .</context>
    </instance>
    <instance id="Argument-argument-4-116-1" docsrc="Argument">
      <context> The terms ' explain <head>'</head> or ' explanation , ' et cetera are frequently used in arguments . Explanations are often used within arguments and presented so as to serve as arguments . Likewise , " ... arguments are essential to the process of justifying the validity of any explanation as there are often multiple explanations for any given phenomenon . "</context>
    </instance>
    <instance id="Argument-argument-4-117-1" docsrc="Argument">
      <context> Explanations are often used <head>within</head> arguments and presented so as to serve as arguments . Likewise , " ... arguments are essential to the process of justifying the validity of any explanation as there are often multiple explanations for any given phenomenon . " Fallacies are types of argument or expressions which are held to be of an invalid form or contain errors in reasoning .</context>
    </instance>
    <instance id="Argument-argument-4-17-2" docsrc="Argument">
      <context> A deductive argument is <head>said</head> to be valid or invalid . If one assumes the premises to be true ( ignoring their actual truth values ) , would the conclusion follow with certainty ? If yes , the argument is valid .</context>
    </instance>
    <instance id="Argument-argument-4-23-2" docsrc="Argument">
      <context> An inductive argument is <head>said</head> to be strong or weak . If the premises of an inductive argument are assumed true , is it probable the conclusion is also true ? If so , the argument is strong .</context>
    </instance>
    <instance id="Argument-argument-4-35-1" docsrc="Argument">
      <context> If an argument is <head>valid</head> , it is a valid deduction , and if its premises are true , the conclusion must be true : a valid argument can not have true premises and a false conclusion . An argument is formally valid if and only if the denial of the conclusion is incompatible with accepting all the premises . The validity of an argument depends , however , not on the actual truth or falsity of its premises and conclusion , but solely on whether or not the argument has a valid logical form .</context>
    </instance>
    <instance id="Argument-argument-4-36-1" docsrc="Argument">
      <context> An argument is formally <head>valid</head> if and only if the denial of the conclusion is incompatible with accepting all the premises . The validity of an argument depends , however , not on the actual truth or falsity of its premises and conclusion , but solely on whether or not the argument has a valid logical form . The validity of an argument is not a guarantee of the truth of its conclusion .</context>
    </instance>
    <instance id="Argument-argument-4-99-1" docsrc="Argument">
      <context> If you , John <head>,</head> will buy this stock , it will become twice as valuable in a year . If you , Mary , study dance , you will become a famous ballet dancer . The value of the argument is connected to the immediate circumstances of the person spoken to .</context>
    </instance>
    <instance id="Argument-argument-5-0-1" docsrc="Argument">
      <context> In logic and philosophy , <head>an</head> argument is a series of statements typically used to persuade someone of something or to present reasons for accepting a conclusion . The general form of an argument in a natural language is that of premises ( typically in the form of propositions , statements or sentences ) in support of a claim : the conclusion .</context>
    </instance>
    <instance id="Argument-argument-5-111-4" docsrc="Argument">
      <context> Note , that by subsuming <head>the</head> specific event ( of Fred 's cat scratching ) as an instance of the general rule that " animals scratch themselves when they have fleas " , Joe will no longer wonder why Fred 's cat is scratching itself . Arguments address problems of belief , explanations address problems of understanding . Also note that in the argument above , the statement , " Fred 's cat has fleas " is up for debate ( i.e. is a claim ) , but in the explanation , the statement , " Fred 's cat has fleas " is assumed to be true ( unquestioned at this time ) and just needs explaining .</context>
    </instance>
    <instance id="Argument-argument-5-115-1" docsrc="Argument">
      <context> The same types of words <head>and</head> phrases are used in presenting explanations and arguments . The terms ' explain ' or ' explanation , ' et cetera are frequently used in arguments . Explanations are often used within arguments and presented so as to serve as arguments .</context>
    </instance>
    <instance id="Argument-argument-5-17-5" docsrc="Argument">
      <context> Otherwise , it is invalid <head>.</head> In determining validity , the structure of the argument is essential to the determination , not the actual truth values . For example , consider the argument that because bats can fly ( premise=true ) , and all flying creatures are birds ( premise=false ) , therefore bats are birds ( conclusion=false ) .</context>
    </instance>
    <instance id="Argument-argument-5-37-2" docsrc="Argument">
      <context> Logic seeks to discover the <head>valid</head> forms , the forms that make arguments valid . A form of argument is valid if and only if the conclusion is true under all interpretations of that argument in which the premises are true . Since the validity of an argument depends solely on its form , an argument can be shown to be invalid by showing that its form is invalid .</context>
    </instance>
    <instance id="Argument-argument-5-39-1" docsrc="Argument">
      <context> A statement form can be <head>shown</head> to be a logical truth by either ( a ) showing that it is a tautology or ( b ) by means of a proof procedure . The corresponding conditional of a valid argument is a necessary truth ( true in all possible worlds ) and so the conclusion necessarily follows from the premises , or follows of logical necessity . The conclusion of a valid argument is not necessarily true , it depends on whether the premises are true .</context>
    </instance>
    <instance id="Argument-argument-5-82-1" docsrc="Argument">
      <context> In informal logic === Argument <head>is</head> an informal calculus , relating an effort to be performed or sum to be spent , to possible future gain , either economic or moral . In informal logic , an argument is a connexion between</context>
    </instance>
    <instance id="Argument-argument-6-23-1" docsrc="Argument">
      <context> Arguments that involve predictions are inductive <head>,</head> as the future is uncertain . An inductive argument is said to be strong or weak . If the premises of an inductive argument are assumed true , is it probable the conclusion is also true ?</context>
    </instance>
    <instance id="Argument-argument-6-38-5" docsrc="Argument">
      <context> A statement form is a logical <head>truth</head> if it is true under all interpretations . A statement form can be shown to be a logical truth by either ( a ) showing that it is a tautology or ( b ) by means of a proof procedure . The corresponding conditional of a valid argument is a necessary truth ( true in all possible worlds ) and so the conclusion necessarily follows from the premises , or follows of logical necessity .</context>
    </instance>
    <instance id="Argument-argument-6-51-2" docsrc="Argument">
      <context> === Soundness === A sound argument <head>is</head> a valid argument whose conclusion follows from its premise(s ) , and the premise(s ) of which is/are true .</context>
    </instance>
    <instance id="Argument-argument-7-0-3" docsrc="Argument">
      <context> The general form of an argument in <head>a</head> natural language is that of premises ( typically in the form of propositions , statements or sentences ) in support of a claim : the conclusion . The structure of some arguments can also be set out in a formal language , and formally defined " arguments " can be made independently of natural language arguments , as in math , logic , and computer science . The standards and criteria used in evaluating arguments and their forms of reasoning are studied in logic .</context>
    </instance>
    <instance id="Argument-argument-7-36-2" docsrc="Argument">
      <context> The validity of an argument depends , <head>however</head> , not on the actual truth or falsity of its premises and conclusion , but solely on whether or not the argument has a valid logical form . The validity of an argument is not a guarantee of the truth of its conclusion . Under a given interpretation , a valid argument may have false premises that render it inconclusive : the conclusion of a valid argument with one or more false premises may be either true or false .</context>
    </instance>
    <instance id="Argument-argument-7-93-6" docsrc="Argument">
      <context> An argument is not a proof . <head>A</head> proof is a logical and cognitive concept ; an argument is a praxeologic concept . A proof changes our knowledge ; an argument compels us to act .</context>
    </instance>
    <instance id="Argument-argument-8-111-1" docsrc="Argument">
      <context> However , if Joe asks Fred , " <head>Why</head> is your cat scratching itself ? " the explanation , " ... because it has fleas . " provides understanding . Both the above argument and explanation require knowing the generalities that a ) fleas often cause itching , and b ) that one often scratches to relieve itching . The difference is in the intent : an argument attempts to settle whether or not some claim is true , and an explanation attempts to provide understanding of the event .</context>
    </instance>
    <instance id="Argument-argument-8-17-4" docsrc="Argument">
      <context> If yes , the argument is valid . <head>Otherwise</head> , it is invalid . In determining validity , the structure of the argument is essential to the determination , not the actual truth values .</context>
    </instance>
    <instance id="Argument-argument-8-37-4" docsrc="Argument">
      <context> Since the validity of an argument depends solely <head>on</head> its form , an argument can be shown to be invalid by showing that its form is invalid . This can be done by giving a counter example of the same form of argument with premises that are true under a given interpretation , but a conclusion that is false under that interpretation . In informal logic this is called a counter argument .</context>
    </instance>
    <instance id="Argument-argument-8-70-2" docsrc="Argument">
      <context> If an expert says that a proposition is <head>true</head> , this provides a reason for tentatively accepting it , in the absence of stronger reasons to doubt it . But suppose that evidence of financial gain suggests that the expert is biased , for example by evidence showing that he will gain financially from his claim . Argument by analogy may be thought of as argument from the particular to particular .</context>
    </instance>
    <instance id="Argument_(literature)-argument-1-2-1" docsrc="Argument_(literature)">
      <context> They <head>were</head> common during the Renaissance as a way to orient a reader within a large work . This first Book proposes , first in brief , the whole Subject , Mans disobedience , and the loss thereupon of Paradise wherein he was plac't : Then touches the prime cause of his fall , the Serpent , or rather Satan in the Serpent ; who revolting from God , and drawing to his side many Legions of Angels , was by the command of God driven out of Heaven with all his Crew into the great Deep . The argument could also be in verse , as in Ludovico Ariosto 's Orlando Furioso or William Blake 's The Marriage of Heaven and Hell .</context>
    </instance>
    <instance id="Argument_(literature)-argument-1-3-1" docsrc="Argument_(literature)">
      <context> This <head>first</head> Book proposes , first in brief , the whole Subject , Mans disobedience , and the loss thereupon of Paradise wherein he was plac't : Then touches the prime cause of his fall , the Serpent , or rather Satan in the Serpent ; who revolting from God , and drawing to his side many Legions of Angels , was by the command of God driven out of Heaven with all his Crew into the great Deep . The argument could also be in verse , as in Ludovico Ariosto 's Orlando Furioso or William Blake 's The Marriage of Heaven and Hell . Most arguments included in poems are written by the authors themselves , but in other cases they could be added subsequently by a printer or publisher to an earlier work .</context>
    </instance>
    <instance id="Controversy-argument-0-7-3" docsrc="Controversy">
      <context> <head>This</head> clause has been deemed to impose a requirement that United States federal courts are not permitted to hear cases that do not pose an actual controversy—that is , an actual dispute between adverse parties which is capable of being resolved by the [ court ] . In addition to setting out the scope of the jurisdiction of the federal judiciary , it also prohibits courts from issuing advisory opinions , or from hearing cases that are either unripe , meaning that the controversy has not arisen yet , or moot , meaning that the controversy has already been resolved . Argument</context>
    </instance>
    <instance id="Conversation-argument-1-79-1" docsrc="Conversation">
      <context> Milton <head>portrays</head> conversation as an art or creation that people can play with and give life to . Deborah Tannen The Argument Culture : Stopping America 's War of Words</context>
    </instance>
    <instance id="Debate-argument-11-173-4" docsrc="Debate">
      <context> Here , the speaker is required to speak for 2 minutes <head>'</head> For the motion ' , 2 minutes ' Against the motion ' and finally draw up a 1-minute conclusion in which the speaker balances the debate . At the end of the fifth minute the debate will be opened to the house , in which members of the audience will put questions to the candidate which they will have to answer . In the Turncoat format , emphasis is on the strength of argument and balancing of opinions .</context>
    </instance>
    <instance id="Debate-argument-11-59-5" docsrc="Debate">
      <context> For example , the third speaker has the opportunity to make <head>a</head> rebuttal towards the opposing team 's argument by introducing new evidence to add to their position . The last speaker is called the " Team Advisor/Captain " . Using this style , the debate is finished with a closing argument by each of the first speakers from each team and new evidence may not be introduced .</context>
    </instance>
    <instance id="Debate-argument-18-59-3" docsrc="Debate">
      <context> For instance the second speaker of the affirmative team to speak is called the " Second Affirmative Speaker <head>"</head> or " Second Proposition Speaker " , depending on the terminology used . Each of the speakers ' positions is based around a specific role . For example , the third speaker has the opportunity to make a rebuttal towards the opposing team 's argument by introducing new evidence to add to their position .</context>
    </instance>
    <instance id="Debate-argument-22-50-4" docsrc="Debate">
      <context> Both sides seek to win against the other while following the rules . One side is typically in favor of ( also <head>known</head> as " for " , " Affirmative " , or " Pro " ) or opposed to ( also known as " against " , " Negative " , " Con " ) a statement , proposition , moot or Resolution . The " for " side must debate points that will support the proposition ; the " against " side must refute these arguments sufficiently to warrant not adopting the proposition ; the " against " side are not required to propose any alternative .</context>
    </instance>
    <instance id="Debate-argument-46-203-3" docsrc="Debate">
      <context> Though they are often expressed via flaming and other forms of argumentation , which consist primarily of assertions , formalized debating websites do exist . The debate style varies from site to site , with local communities and cultures developing . Some sites promote a contentious <head>atmosphere</head> that can border on " flaming " ( the personal insult of your opponent , also known as a type of ad hominem fallacy ) , while others strictly police such activities and strongly promote independent research and more structured arguments .</context>
    </instance>
    <instance id="Debate-argument-8-0-1" docsrc="Debate">
      <context> Debate is contention in argument ; strife , <head>dissension</head> , quarrelling , controversy ; especially a formal discussion of subjects before a public assembly or legislature , in Parliament or in any deliberative assembly . Debate is a method of formally presenting an argument in a disciplined manner .</context>
    </instance>
    <instance id="Debate-argument-9-108-2" docsrc="Debate">
      <context> This is a format specifically used in France ( <head>though</head> the debates are commonly held in English . ) Two teams of five debate on a given motion . One side is supposed to defend the motion while the other must defeat it . The debate is judged on the quality of the arguments , the strength of the rhetoric , the charisma of the speaker ( for Mr. Jones ) , the quality of the humor , the ability to think on one 's feet and , of course , the teamwork .</context>
    </instance>
    <instance id="Debate-argument-9-154-2" docsrc="Debate">
      <context> Public debate may mean simply debating by the public <head>,</head> or in public . The term is also used for a particular formal style of debate in a competitive or educational context . Two teams of two compete through six rounds of argument , giving persuasive speeches on a particular topic .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-10-16-2" docsrc="Parameter_(computer_programming)">
      <context> Parameters appear in procedure definitions ; arguments appear in procedure <head>calls</head> . In the function definition f(x ) = x*x the variable x is a parameter ; in the function call f(2 ) the value 2 is the argument of the function . Loosely , a parameter is a type , and an argument is an instance .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-10-2-1" docsrc="Parameter_(computer_programming)">
      <context> See the Parameters and arguments section for more information . <head>In</head> the most common case , call by value , a parameter acts within the subroutine as a variable initialized to the value of the argument ( a local ( isolated ) copy of the argument if the argument is a variable ) , but in other cases , e.g. call by reference , the argument supplied by the caller can be affected by actions within the called subroutine ( as discussed in evaluation strategy ) . In call by value , one can thus think of arguments as values ( properly , think of the value of arguments as the " arguments " themselves ) , but in general arguments are not simply values .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-10-44-1" docsrc="Parameter_(computer_programming)">
      <context> As such , both data and key formal generic parameters <head>are</head> substituted with actual generic parameters of type STRING. Some languages use a special keyword ( e.g. void ) to indicate that the subroutine has no parameters ; in formal type theory , such functions take an empty parameter list ( whose type is not void , but rather unit ) . The exact mechanism for assigning arguments to parameters , called argument passing , depends upon the evaluation strategy used for that parameter ( typically call by value ) , which may be specified using keywords .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-11-2-2" docsrc="Parameter_(computer_programming)">
      <context> In the most common case , call by value , a <head>parameter</head> acts within the subroutine as a variable initialized to the value of the argument ( a local ( isolated ) copy of the argument if the argument is a variable ) , but in other cases , e.g. call by reference , the argument supplied by the caller can be affected by actions within the called subroutine ( as discussed in evaluation strategy ) . In call by value , one can thus think of arguments as values ( properly , think of the value of arguments as the " arguments " themselves ) , but in general arguments are not simply values . The semantics for how parameters can be declared and how the arguments are passed to the parameters of subroutines are defined by the language , but the details of how this is represented in any particular computer system depend on the calling conventions of that system .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-11-28-2" docsrc="Parameter_(computer_programming)">
      <context> Because of the difference between parameters and arguments , it is <head>possible</head> to supply inappropriate arguments to a procedure . The call may supply too many or too few arguments ; one or more of the arguments may be a wrong type ; or arguments may be supplied in the wrong order . Any of these situations causes a mismatch between the parameter and argument lists , and the procedure will often return an unintended answer or generate a runtime error .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-11-31-1" docsrc="Parameter_(computer_programming)">
      <context> Any of these situations causes a mismatch between the parameter and <head>argument</head> lists , and the procedure will often return an unintended answer or generate a runtime error . === Alternative convention in Eiffel === Within the Eiffel software development method and language , the terms argument and parameter have distinct uses established by convention .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-12-15-4" docsrc="Parameter_(computer_programming)">
      <context> For example , if one defines a function as def f(x ) <head>:</head> ... , then x is the parameter , while if it called by a = ... ; f(a ) then a is the argument . In both cases a parameter is an ( unbound ) variable , while the argument can be thought of as a value or variable , depending on the calling convention . In case of call by value , one can think of the argument as a value ( properly , as the value of the argument )</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-12-59-1" docsrc="Parameter_(computer_programming)">
      <context> PowerShell example : Some languages allow subroutines to be defined to accept <head>a</head> variable number of arguments . For such languages , the subroutines must iterate through the list of arguments .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-13-53-1" docsrc="Parameter_(computer_programming)">
      <context> === Default arguments === PowerShell example : Some languages allow subroutines to be <head>defined</head> to accept a variable number of arguments .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-14-15-3" docsrc="Parameter_(computer_programming)">
      <context> The term parameter ( sometimes called formal parameter ) is often used to refer <head>to</head> the variable as found in the function definition , while argument ( sometimes called actual parameter ) refers to the actual input passed . For example , if one defines a function as def f(x ) : ... , then x is the parameter , while if it called by a = ... ; f(a ) then a is the argument . In both cases a parameter is an ( unbound ) variable , while the argument can be thought of as a value or variable , depending on the calling convention .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-15-27-1" docsrc="Parameter_(computer_programming)">
      <context> value1 and value2 are both arguments to the sum function in this context . At <head>runtime</head> , the values assigned to these variables are passed to the function sum as arguments . In the sum function , the parameters addend1 and addend2 are evaluated , yielding the arguments 40 and 2 , respectively .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-15-27-3" docsrc="Parameter_(computer_programming)">
      <context> In the sum function , the parameters addend1 and addend2 are evaluated , yielding the <head>arguments</head> 40 and 2 , respectively . The values of the arguments are added , and the result is returned to the caller , where it is assigned to the variable sumValue . Because of the difference between parameters and arguments , it is possible to supply inappropriate arguments to a procedure .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-16-18-1" docsrc="Parameter_(computer_programming)">
      <context> If a procedure has parameters , the part of its definition that specifies the parameters is <head>called</head> its parameter list . By contrast , the arguments are the values supplied to the procedure when it is called . Unlike the parameters , which form an unchanging part of the procedure 's definition , the arguments may vary from call to call .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-16-18-2" docsrc="Parameter_(computer_programming)">
      <context> By contrast , the arguments are the values supplied to the procedure when it is called <head>.</head> Unlike the parameters , which form an unchanging part of the procedure 's definition , the arguments may vary from call to call . Each time a procedure is called , the part of the procedure call that specifies the arguments is called the argument list .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-16-26-2" docsrc="Parameter_(computer_programming)">
      <context> The variables value1 and value2 are initialized with values . value1 and value2 are both arguments <head>to</head> the sum function in this context . At runtime , the values assigned to these variables are passed to the function sum as arguments .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-16-28-1" docsrc="Parameter_(computer_programming)">
      <context> The values of the arguments are added , and the result is returned to the caller <head>,</head> where it is assigned to the variable sumValue . Because of the difference between parameters and arguments , it is possible to supply inappropriate arguments to a procedure . The call may supply too many or too few arguments ; one or more of the arguments may be a wrong type ; or arguments may be supplied in the wrong order .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-17-33-1" docsrc="Parameter_(computer_programming)">
      <context> The term argument is used exclusively in reference to a routine 's inputs , and the term <head>parameter</head> is used exclusively in type parameterization for generic classes . Consider the following routine definition : The routine sum takes two arguments addend1 and addend2 , which are called the routine 's formal arguments .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-2-32-1" docsrc="Parameter_(computer_programming)">
      <context> === Alternative <head>convention</head> in Eiffel === Within the Eiffel software development method and language , the terms argument and parameter have distinct uses established by convention . The term argument is used exclusively in reference to a routine 's inputs , and the term parameter is used exclusively in type parameterization for generic classes .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-2-48-1" docsrc="Parameter_(computer_programming)">
      <context> Some languages <head>use</head> a special keyword ( e.g. void ) to indicate that the subroutine has no parameters ; in formal type theory , such functions take an empty parameter list ( whose type is not void , but rather unit ) . The exact mechanism for assigning arguments to parameters , called argument passing , depends upon the evaluation strategy used for that parameter ( typically call by value ) , which may be specified using keywords . === Default arguments ===</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-20-18-2" docsrc="Parameter_(computer_programming)">
      <context> By contrast , the arguments are the values supplied to the procedure when it is called . Unlike the parameters <head>,</head> which form an unchanging part of the procedure 's definition , the arguments may vary from call to call . Each time a procedure is called , the part of the procedure call that specifies the arguments is called the argument list .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-21-2-1" docsrc="Parameter_(computer_programming)">
      <context> See the Parameters and arguments section for more information . In the most common case , call by value , a <head>parameter</head> acts within the subroutine as a variable initialized to the value of the argument ( a local ( isolated ) copy of the argument if the argument is a variable ) , but in other cases , e.g. call by reference , the argument supplied by the caller can be affected by actions within the called subroutine ( as discussed in evaluation strategy ) . In call by value , one can thus think of arguments as values ( properly , think of the value of arguments as the " arguments " themselves ) , but in general arguments are not simply values .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-24-15-4" docsrc="Parameter_(computer_programming)">
      <context> For example , if one defines a function as def f(x ) : ... , then x is the parameter , while if it <head>called</head> by a = ... ; f(a ) then a is the argument . In both cases a parameter is an ( unbound ) variable , while the argument can be thought of as a value or variable , depending on the calling convention . In case of call by value , one can think of the argument as a value ( properly , as the value of the argument )</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-24-28-1" docsrc="Parameter_(computer_programming)">
      <context> The values of the arguments are added , and the result is returned to the caller , where it is assigned to the variable <head>sumValue</head> . Because of the difference between parameters and arguments , it is possible to supply inappropriate arguments to a procedure . The call may supply too many or too few arguments ; one or more of the arguments may be a wrong type ; or arguments may be supplied in the wrong order .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-25-1-4" docsrc="Parameter_(computer_programming)">
      <context> Note that variables from the calling context can be arguments : if the subroutine is called as a = 2 ; b = 3 ; <head>add(a</head> , b ) then the variables a , b are the arguments , not only the values 2 , 3 . See the Parameters and arguments section for more information . In the most common case , call by value , a parameter acts within the subroutine as a variable initialized to the value of the argument ( a local ( isolated ) copy of the argument if the argument is a variable ) , but in other cases , e.g. call by reference , the argument supplied by the caller can be affected by actions within the called subroutine ( as discussed in evaluation strategy ) .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-25-15-1" docsrc="Parameter_(computer_programming)">
      <context> After the function has been defined , it can be invoked as follows : The terms parameter and argument are sometimes used interchangeably , and <head>the</head> context is used to distinguish the meaning . The term parameter ( sometimes called formal parameter ) is often used to refer to the variable as found in the function definition , while argument ( sometimes called actual parameter ) refers to the actual input passed .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-25-2-1" docsrc="Parameter_(computer_programming)">
      <context> See the Parameters and arguments section for more information . In the most common case , call by value , a parameter acts within the <head>subroutine</head> as a variable initialized to the value of the argument ( a local ( isolated ) copy of the argument if the argument is a variable ) , but in other cases , e.g. call by reference , the argument supplied by the caller can be affected by actions within the called subroutine ( as discussed in evaluation strategy ) . In call by value , one can thus think of arguments as values ( properly , think of the value of arguments as the " arguments " themselves ) , but in general arguments are not simply values .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-26-0-2" docsrc="Parameter_(computer_programming)">
      <context> In computer programming , a parameter is a special kind of variable , used in a subroutine to refer to one of the pieces of data <head>provided</head> as input to the subroutine . These pieces of data are called arguments . An ordered list of parameters is usually included in the definition of a subroutine , so that , each time the subroutine is called , its arguments for that call can be assigned to the corresponding parameters .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-26-15-6" docsrc="Parameter_(computer_programming)">
      <context> In case of call by value , one can think of the argument as a value ( properly , as the value of the argument ) <head>–</head> for example , f(2 ) and a = 2 ; f(a ) are equivalent calls – while in call by reference one can think of the argument as a variable in the calling context .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-26-16-1" docsrc="Parameter_(computer_programming)">
      <context> for example , f(2 ) and a = 2 ; f(a ) are equivalent calls – while in call by reference one can think of the <head>argument</head> as a variable in the calling context . Parameters appear in procedure definitions ; arguments appear in procedure calls . In the function definition f(x ) = x*x the variable x is a parameter ; in the function call f(2 ) the value 2 is the argument of the function .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-33-2-1" docsrc="Parameter_(computer_programming)">
      <context> See the Parameters and arguments section for more information . In the most common case , call by value , a parameter acts within the subroutine as a variable initialized to the value <head>of</head> the argument ( a local ( isolated ) copy of the argument if the argument is a variable ) , but in other cases , e.g. call by reference , the argument supplied by the caller can be affected by actions within the called subroutine ( as discussed in evaluation strategy ) . In call by value , one can thus think of arguments as values ( properly , think of the value of arguments as the " arguments " themselves ) , but in general arguments are not simply values .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-35-1-4" docsrc="Parameter_(computer_programming)">
      <context> Note that variables from the calling context can be arguments : if the subroutine is called as a = 2 ; b = 3 ; add(a , b ) then the variables a , b <head>are</head> the arguments , not only the values 2 , 3 . See the Parameters and arguments section for more information . In the most common case , call by value , a parameter acts within the subroutine as a variable initialized to the value of the argument ( a local ( isolated ) copy of the argument if the argument is a variable ) , but in other cases , e.g. call by reference , the argument supplied by the caller can be affected by actions within the called subroutine ( as discussed in evaluation strategy ) .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-36-15-2" docsrc="Parameter_(computer_programming)">
      <context> The terms parameter and argument are sometimes used interchangeably , and the context is used to distinguish the meaning . The term parameter ( sometimes called formal parameter ) is often used to refer to the <head>variable</head> as found in the function definition , while argument ( sometimes called actual parameter ) refers to the actual input passed . For example , if one defines a function as def f(x ) : ... , then x is the parameter , while if it called by a = ... ; f(a ) then a is the argument .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-37-1-2" docsrc="Parameter_(computer_programming)">
      <context> Just as in standard mathematical usage , the argument is thus the actual input passed to a function , procedure , or routine , whereas the parameter is the variable inside the implementation of the subroutine . <head>For</head> example , if one defines the add subroutine as def add(x , y ) : return x + y , then x , y are parameters , while if this is called as add(2 , 3 ) , then 2 , 3 are the arguments . Note that variables from the calling context can be arguments : if the subroutine is called as a = 2 ; b = 3 ; add(a , b ) then the variables a , b are the arguments , not only the values 2 , 3 .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-38-1-4" docsrc="Parameter_(computer_programming)">
      <context> Note that variables from the calling context can be arguments : if the subroutine is called as a = 2 ; b = 3 ; add(a , b ) then the variables a , b are the arguments <head>,</head> not only the values 2 , 3 . See the Parameters and arguments section for more information . In the most common case , call by value , a parameter acts within the subroutine as a variable initialized to the value of the argument ( a local ( isolated ) copy of the argument if the argument is a variable ) , but in other cases , e.g. call by reference , the argument supplied by the caller can be affected by actions within the called subroutine ( as discussed in evaluation strategy ) .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-4-1-3" docsrc="Parameter_(computer_programming)">
      <context> For example , if <head>one</head> defines the add subroutine as def add(x , y ) : return x + y , then x , y are parameters , while if this is called as add(2 , 3 ) , then 2 , 3 are the arguments . Note that variables from the calling context can be arguments : if the subroutine is called as a = 2 ; b = 3 ; add(a , b ) then the variables a , b are the arguments , not only the values 2 , 3 . See the Parameters and arguments section for more information .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-4-17-4" docsrc="Parameter_(computer_programming)">
      <context> In general , a <head>procedure</head> may be defined with any number of parameters , or no parameters at all . If a procedure has parameters , the part of its definition that specifies the parameters is called its parameter list . By contrast , the arguments are the values supplied to the procedure when it is called .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-4-27-2" docsrc="Parameter_(computer_programming)">
      <context> At runtime , the <head>values</head> assigned to these variables are passed to the function sum as arguments . In the sum function , the parameters addend1 and addend2 are evaluated , yielding the arguments 40 and 2 , respectively . The values of the arguments are added , and the result is returned to the caller , where it is assigned to the variable sumValue .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-4-9-1" docsrc="Parameter_(computer_programming)">
      <context> The semantics for how <head>parameters</head> can be declared and how the arguments are passed to the parameters of subroutines are defined by the language , but the details of how this is represented in any particular computer system depend on the calling conventions of that system . After the function has been defined , it can be invoked as follows : The terms parameter and argument are sometimes used interchangeably , and the context is used to distinguish the meaning .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-45-1-1" docsrc="Parameter_(computer_programming)">
      <context> An ordered list of parameters is usually included in the definition of a subroutine , so that , each time the subroutine is called , its arguments for that call can be assigned to the corresponding parameters . Just as in standard mathematical usage , <head>the</head> argument is thus the actual input passed to a function , procedure , or routine , whereas the parameter is the variable inside the implementation of the subroutine . For example , if one defines the add subroutine as def add(x , y ) : return x + y , then x , y are parameters , while if this is called as add(2 , 3 ) , then 2 , 3 are the arguments .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-5-26-1" docsrc="Parameter_(computer_programming)">
      <context> The code which calls the <head>sum</head> function might look like this : The variables value1 and value2 are initialized with values . value1 and value2 are both arguments to the sum function in this context .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-5-33-1" docsrc="Parameter_(computer_programming)">
      <context> The term argument is used <head>exclusively</head> in reference to a routine 's inputs , and the term parameter is used exclusively in type parameterization for generic classes . Consider the following routine definition : The routine sum takes two arguments addend1 and addend2 , which are called the routine 's formal arguments .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-5-44-1" docsrc="Parameter_(computer_programming)">
      <context> As such , both data <head>and</head> key formal generic parameters are substituted with actual generic parameters of type STRING. Some languages use a special keyword ( e.g. void ) to indicate that the subroutine has no parameters ; in formal type theory , such functions take an empty parameter list ( whose type is not void , but rather unit ) . The exact mechanism for assigning arguments to parameters , called argument passing , depends upon the evaluation strategy used for that parameter ( typically call by value ) , which may be specified using keywords .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-55-1-4" docsrc="Parameter_(computer_programming)">
      <context> Note that variables from the calling context can be arguments : if the subroutine is called as a = 2 ; b = 3 ; add(a , b ) then the variables a , b are the arguments , not only the values 2 , 3 . See the Parameters and arguments section for more <head>information</head> . In the most common case , call by value , a parameter acts within the subroutine as a variable initialized to the value of the argument ( a local ( isolated ) copy of the argument if the argument is a variable ) , but in other cases , e.g. call by reference , the argument supplied by the caller can be affected by actions within the called subroutine ( as discussed in evaluation strategy ) .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-6-0-1" docsrc="Parameter_(computer_programming)">
      <context> In computer programming , a parameter <head>is</head> a special kind of variable , used in a subroutine to refer to one of the pieces of data provided as input to the subroutine . These pieces of data are called arguments .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-6-15-7" docsrc="Parameter_(computer_programming)">
      <context> – for example , f(2 ) <head>and</head> a = 2 ; f(a ) are equivalent calls – while in call by reference one can think of the argument as a variable in the calling context . Parameters appear in procedure definitions ; arguments appear in procedure calls .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-6-35-1" docsrc="Parameter_(computer_programming)">
      <context> Consider the following routine definition : <head>The</head> routine sum takes two arguments addend1 and addend2 , which are called the routine 's formal arguments . A call to sum specifies actual arguments , as shown below with value1 and value2 .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-7-27-3" docsrc="Parameter_(computer_programming)">
      <context> In the sum function , the parameters <head>addend1</head> and addend2 are evaluated , yielding the arguments 40 and 2 , respectively . The values of the arguments are added , and the result is returned to the caller , where it is assigned to the variable sumValue . Because of the difference between parameters and arguments , it is possible to supply inappropriate arguments to a procedure .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-8-0-3" docsrc="Parameter_(computer_programming)">
      <context> These pieces of data are called arguments . <head>An</head> ordered list of parameters is usually included in the definition of a subroutine , so that , each time the subroutine is called , its arguments for that call can be assigned to the corresponding parameters . Just as in standard mathematical usage , the argument is thus the actual input passed to a function , procedure , or routine , whereas the parameter is the variable inside the implementation of the subroutine .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-9-1-2" docsrc="Parameter_(computer_programming)">
      <context> Just as in standard mathematical usage , the argument <head>is</head> thus the actual input passed to a function , procedure , or routine , whereas the parameter is the variable inside the implementation of the subroutine . For example , if one defines the add subroutine as def add(x , y ) : return x + y , then x , y are parameters , while if this is called as add(2 , 3 ) , then 2 , 3 are the arguments . Note that variables from the calling context can be arguments : if the subroutine is called as a = 2 ; b = 3 ; add(a , b ) then the variables a , b are the arguments , not only the values 2 , 3 .</context>
    </instance>
    <instance id="Parameter_(computer_programming)-argument-9-28-1" docsrc="Parameter_(computer_programming)">
      <context> The values of the arguments are added , and <head>the</head> result is returned to the caller , where it is assigned to the variable sumValue . Because of the difference between parameters and arguments , it is possible to supply inappropriate arguments to a procedure . The call may supply too many or too few arguments ; one or more of the arguments may be a wrong type ; or arguments may be supplied in the wrong order .</context>
    </instance>
    <instance id="United_States_presidential_election_debates-argument-15-40-2" docsrc="United_States_presidential_election_debates">
      <context> A coin toss determines who gets to answer the first question and each candidate will <head>get</head> alternate turns . Once a question is asked , the candidate has 2 minutes to answer the question . After this , the opposing candidate has around 1 minute to respond and rebut her/his arguments .</context>
    </instance>
    <instance id="br-a13#w1493_0" docsrc="br-a13">
      <context> Incidentally , only two did it before a home audience . Bobby_Lowe of Boston was the first to hit four at home and Gil_Hodges turned_the_trick in Brooklyn 's Ebbetts_Field . Ed_Delahanty and Chuck_Klein of the Phillies , the Braves ' Joe_Adcock , Lou_Gehrig of the Yankees , Pat_Seerey of the White_Sox and Rocky_Colavito , then with Cleveland , made their history on_the_road . Willie 's big day revived the running <head>argument</head> about the relative merits of Mays and Mickey_Mantle . This is an issue which boils_down to a matter of opinion , depending_on whether you 're an American or National fan and anti or pro Yankee . The record_books , however , would favor the Giants ' ace . In four of his nine previous seasons Mays hit as_many_as 25 home_runs and stole as_many_as 25 bases .</context>
    </instance>
    <instance id="br-d02#w1217_0" docsrc="br-d02">
      <context> This is what we mean when we say this demand must be accepted without condition . If to be a Christian means to say yes where I otherwise say no , or where I do not have the right to say anything at_all , then my only choice is to refuse to be a Christian . Expressed differently : if the price for becoming a faithful follower of Jesus_Christ is some form of self-destruction , whether of the body or of the mind - sacrificium corporis , sacrificium intellectus - then there is no alternative but that the price remain unpaid . This must be stressed because it is absolutely essential to the <head>argument</head> of this concluding chapter . Modern man , as Dietrich_Bonhoeffer has told us , has `` come_of_age '' ; and though this process by_no_means represents an unambiguous gain and is , in_fact , marked by the estrangement from the depths that seems to be the cost of human maturation , it is still a positive step forward ; and those of us who so richly benefit from it should be the last to despise it . In_any_event , it is an irreversible step , and if we are at_all honest with ourselves , we will know we have no other alternative than to live in the world in which God has seen_fit to place us . To say this , of_course , is to take_up a position on one side of a controversy going_on now for some two hundred years , or , at_any_rate , since the beginning of the distinctively modern period in theological thought .</context>
    </instance>
    <instance id="br-d02#w1918_0" docsrc="br-d02">
      <context> If the demand for demythologization is unavoidable and so must be accepted by theology unconditionally , the position of the `` right '' is clearly untenable . Whereas Bultmann 's `` center '' position is structurally inconsistent and is therefore indefensible on formal grounds alone , the general position of the `` right '' , as represented , say , by Karl_Barth , involves the rejection or at_least qualification of the demand for demythologization and so is invalidated on the material grounds we have just considered . It follows , then , provided the possibilities have been exhausted , that the only real alternative is the general viewpoint of the `` left '' , which has been represented on the Continent by Fritz_Buri and , to some extent at_least , is found in much that is significant in American and English theology . In_order to make the implications of our position as clear as possible , we may develop this <head>argument</head> at greater length . We may show , first , that there cannot possibly be an alternative other_than the three typically represented by Bultmann , Barth , and Buri . To do this , it is sufficient to point_out that if the principle in_terms_of which alternatives are to be conceived is such_as to exclude more_than two , then the question of a `` third '' possibility is a meaningless question . Thus , if what is at_issue is whether `` All S is P '' , it is indifferent whether `` Some S is not P '' or `` No S is P '' , since in either case the judgment in_question is false .</context>
    </instance>
    <instance id="br-d02#w401_0" docsrc="br-d02">
      <context> If Bultmann 's own definition of myth is strictly adhered to ( and it is interesting that this is almost never done by those who make such pronouncements ) , the evidence is overwhelming that he does not at all exaggerate the extent to which the mythological concepts of traditional theology have become incredible and irrelevant . Nor is it necessary to look_for such evidence in the great urban_centers of our culture that are admittedly almost entirely secularized and so profoundly estranged from the conventional forms in which the gospel has been communicated . On_the_contrary , even in the heart of `` the Bible_belt '' itself , as can be attested by any one who is called to work there , the industrial and technological_revolutions have long been under_way , together with the corresponding changes in man 's picture of himself and his world . In_fact , it is in just such a situation that the profundity of Bultmann 's <head>argument</head> is disclosed . Although the theological forms of the past continue to exist in a way they do not in a more secularized situation , the striking thing is the rapidity with which they are being reduced to a marginal existence . This is especially in_evidence among the present generation of the suburban middle_class . Time_and_again in counseling and teaching , one encounters members of this group whose attempts to bring into some kind of unity the insubstantial mythologies of their `` fundamentalist '' heritage and the stubborn reality of the modern_world are only_too painfully obvious .</context>
    </instance>
    <instance id="br-e30#w2098_0" docsrc="br-e30">
      <context> You may save valuable production minutes with a change . Spread your vacation period over the widest possible span of time or shut the plant down for two_weeks . This will cut the expense of vacation replacements . And with the shutdown method there will be no <head>argument</head> as to who gets the choice vacation dates . Also make sure you have reasonable requirements as to hours worked before a production employee is entitled to a vacation . You might try providing standard vacation time_off but make the vacation pay depend_on the number of hours worked in the previous year .</context>
    </instance>
    <instance id="br-f08#w824_0" docsrc="br-f08">
      <context> Finally , he was cooking , washing dishes , bathing the children , and even ironing - and still his wife refused to have relations as often as he desired them . One wife , described by a New_York psychologist , so dominated her husband that she actually placed their sexual_relationship on a schedule , writing it down right between the weekly PTA meetings and the Thursday night neighborhood card parties . Another put sex on a dollars and cents basis . After every money <head>argument</head> , she rebuffed her husband 's overtures until the matter was settled in her favor . Experts say the partners in marriages like these can almost be typed . The wife is likely to be young , sophisticated , smart_as_a_whip - often a girl who has sacrificed a promising career for marriage . She knows the power of the sex urge and how to use it to manipulate her husband .</context>
    </instance>
    <instance id="br-f08#w977_0" docsrc="br-f08">
      <context> The husband is usually a well-educated professional , preoccupied with his job - often an organization man whose motto for getting_ahead is : `` Do n't rock_the_boat '' . Sometimes this leads to his becoming demandingly dominant in marriage . Hemmed_in on the job and unable to assert himself , he uses the sex_act so he can be supreme in at_least one area . More often , though , he is so accustomed to submitting to authority on the job without <head>argument</head> that he lives by the same rule at home . Some psychologists , in_fact , suggest that career bound husbands often are more to blame for topsy-turvy marriages than their wives . The wife 's attempt at control , these psychologists contend , is sometimes merely a pathetic effort to compel her husband to pay as much attention to her as he does to his job . Naturally no woman can ever completely monopolize the sexual initiative .</context>
    </instance>
    <instance id="br-f14#w733_0" docsrc="br-f14">
      <context> These questions touch the root of confusion in the prosecution 's case . It might be contended , of_course , that Eichmann in stubbornly denying anti-Semitic feelings was lying or insisting on a private definition of anti-Semitism . But in either event he was the wrong man for the kind of case outlined by Ben_Gurion and set_forth in the indictment . In such a case the defendant should serve as a clear example and not have_to be tied to the issue by <head>argument</head> . One who could be linked to anti-Semitism only by overcoming his objections is scarcely a good specimen of the Jew-baiter throughout the ages . Shout at Eichmann though he might , the Prosecutor could not establish that the defendant was falsifying the way he felt about Jews or that what he did feel fell_into the generally recognized category of anti-Semitism . Yes , he believed that the Jews were `` enemies of the Reich '' , and such a belief is , of_course , typical of `` patriotic '' anti-Semites ; but he believed in the Jew as enemy in a kind of abstract , theological way , like a member of a cult speculating on the nature of things .</context>
    </instance>
    <instance id="br-f16#w1614_0" docsrc="br-f16">
      <context> Instead of quelling the dissension , as many captains of the era would have done ( Sir_Francis_Drake lopped a man 's head off under similar circumstances ) , Hudson decided to be reasonable . He went_to his cabin and emerged carrying a large chart , which he set_up in_view of the crew . Patiently , he explained what he knew about their course and their objectives . When Hudson had finished , the `` town_meeting '' broke_down into a general , wordy <head>argument</head> . One man remarked that if he had a_hundred pounds , he would give ninety of them to be back in England . Up spoke carpenter Staffe , who said he would n't give ten pounds to be home . The statement was effective .</context>
    </instance>
    <instance id="br-f23#w1050_0" docsrc="br-f23">
      <context> If we look_at the situation this way , we can get an idea of Khrushchev 's nightmarish worries - or , at_least , of the worries he might have if his enemies were disposed to exploit their advantage . The other charge was that America 's political position in the world has progressively deteriorated in recent years . The contention needs to be formulated with much greater precision than it ever was during the campaign , but once that has been done , I fail to see how any serious student of world_affairs can quarrel with it . The <head>argument</head> was typically advanced in_terms_of U._S. `` prestige '' . Prestige , however , is only a minor part of the problem ; and even then , it is a concept that can be highly misleading . Prestige is a measure of how other people think_of you , well or ill . But contrary to what was implied during the campaign , prestige is surely not important for its own sake .</context>
    </instance>
    <instance id="br-g16#w1504_0" docsrc="br-g16">
      <context> When words can be used in a more fresh and primitive way so that they strike with the force of sights and sounds , when tones of sound and colors of paint and the carven shape all strike the sensibilities with an undeniable force of data in and of themselves , compelling the observer into an attitude of attention , all this imitates the way experience itself in its deepest character strikes upon the door of consciousness and clamors for entrance . These are like the initial ways in which the world forces itself upon the self and thrusts the self into decision and choice . The presence of genuine mimesis in art is marked by the persistence with which the work demands attention and compels valuation even_though it is but vaguely understood . Underlying these conceptions of mimesis are certain presuppositions concerning the nature of primary human experience which require some exposition before the main <head>argument</head> can proceed . Experience is not seen , as it is in classical rationalism , as presenting us initially with clear and distinct objects simply located in space and registering their character , movements , and changes on the tabula_rasa of an uninvolved intellect . Neither is primary experience understood according_to the attitude of modern empiricism in which nothing is thought to be received other_than signals of sensory qualities producing their responses in the appropriate sense_organs . Primary feelings of the world come neither as a collection of clearly known objects ( houses , trees , implements , etc . ) nor a collection of isolated and neutral sensory qualities .</context>
    </instance>
    <instance id="br-g23#w1436_0" docsrc="br-g23">
      <context> The son and heir of a prominent family marries a girl who has tell-tale shadows on the half-moons of her finger_nails . In_time she presents her aristocratic husband with a coal-black child . Is the world better for having this idea thrust upon it ? Will <head>argument</head> and debate decide its truth or falsity ? For answers to such questions we must turn_to the anthropologists , the biologists , the historians , the psychologists , and the sociologists . Long_ago they consigned the notions of Kyne and Dixon to the scrap_heap . False ideas surfeit another sector of our life .</context>
    </instance>
    <instance id="br-g23#w1731_0" docsrc="br-g23">
      <context> But ideas , just for the sake of having them , are not enough . In the 1930 's , cures for the depression literally flooded Washington . For a time the President received hundreds of them every_day , most_of them worthless . Ideas need to be tested , and not merely by <head>argument</head> and debate . When some question arises in the medical field concerning cancer , for_instance , we do not turn_to free and open discussion as in a political_campaign . We have recourse to the scientifically trained specialist in the laboratory . The merits of the Salk anti polio vaccine were not established on the forensic platform or in newspaper editorials , but in the laboratory and by tests in the field on thousands of children .</context>
    </instance>
    <instance id="br-g23#w1815_0" docsrc="br-g23">
      <context> When some question arises in the medical field concerning cancer , for_instance , we do not turn_to free and open discussion as in a political_campaign . We have recourse to the scientifically trained specialist in the laboratory . The merits of the Salk anti polio vaccine were not established on the forensic platform or in newspaper editorials , but in the laboratory and by tests in the field on thousands of children . Our presidential campaigns provide much debate and <head>argument</head> . But is the result new barnsful of tested knowledge on the basis of which we can with_confidence solve our domestic and international problems ? Man , we are told , is endowed with reason and is capable of distinguishing good from bad . But what a super Herculean task it is to winnow anything of value from the mud_beplastered arguments used so freely , particularly since such common use is made of cliches and stereotypes , in themselves declarations of intellectual bankruptcy .</context>
    </instance>
    <instance id="br-g23#w1876_0" docsrc="br-g23">
      <context> Our presidential campaigns provide much debate and argument . But is the result new barnsful of tested knowledge on the basis of which we can with_confidence solve our domestic and international problems ? Man , we are told , is endowed with reason and is capable of distinguishing good from bad . But what a super Herculean task it is to winnow anything of value from the mud_beplastered <head>arguments</head> used so freely , particularly since such common use is made of cliches and stereotypes , in themselves declarations of intellectual bankruptcy . We are reminded , however , that freedom_of_thought and discussion , the unfettered exchange of ideas , is basic under our form_of_government . Assuredly in our political_campaigns there is freedom to think , to examine any and all issues , and to speak without restraint . No_holds_are_barred .</context>
    </instance>
    <instance id="br-g31#w1215_0" docsrc="br-g31">
      <context> Unlike his younger brother , Joe , he never presumed_to address her more familiarly than as `` My dear friend '' , although he praised and envied the elegance and purity of her style . And when he complained of the lack of time for all he wanted to do , Henrietta advised him to rise at five in the morning as she and Papa did . One thing Papa had not taught Henrietta was how to handle a young_man as high-spirited and opinionated as herself . She could not resist the opportunity `` of showing her superiority in <head>argument</head> over a man '' which she had remarked as one of the `` feminine follies '' of Sara_Sullam ; and in her forthright way , Henrietta , who in her story of Sara had indicated her own unwillingness `` to think_of men as the privileged '' and `` women as submissive and yielding '' , felt obliged to defend vigorously any statement of hers to which Morris_Jastrow took the slightest exception - he objected to her stand on the Corbin affair , as_well_as on the radical reforms of Dr._Wise of Hebrew_Union_College - until once , in sheer desperation , he wrote that he had given_up hope they would ever agree on anything . But that did not prevent him from writing more long letters , or from coming to spend his Christmas vacations with the hospitable , lively Szolds in their pleasant house on Lombard_Street . `` We 've got Father and Mother and each_other , '' said Beth on the first page of Louisa_Alcott 's Little_Women ; and , `` I do think that families are the most beautiful things in all the world '' , burst_out Jo some five_hundred pages later in that popular story of the March family , which had first appeared when Henrietta was eight ; and the Szold family , as it developed , bore a striking resemblance to the Marches . Mr._March , like Benjamin_Szold , was a clergyman , although of an indeterminate denomination ; and `` Marmee '' March , like Sophie_Szold , was the competent manager of her brood of girls , of whom the Marches had only four to the Szolds ' five .</context>
    </instance>
    <instance id="br-g31#w181_0" docsrc="br-g31">
      <context> Into the texture of this tapestry of history and human drama Henrietta , as every artist delights to do , wove strands of her own intuitive insights into human nature and - especially in the remarkable story of the attraction and conflict between two so disparate and fervent characters as this pair - into the relations of men and women : `` In their relations , she was the giver and he the receiver , nay the demander . His feeling always exacted sacrifices from her . One is so accustomed to think_of men as the privileged who need but ask and receive , and women as submissive and yielding , that our sympathies are usually enlisted on the side of the man whose love is not returned , and we condemn the woman as a coquette . The very firmness of her convictions and logical clearness of her <head>arguments</head> captivated and stimulated him to make greater efforts ; usually , this is most exasperating to men , who expect every woman to verify their preconceived_notions concerning her sex , and when she does not , immediately condemn her as eccentric and unwomanly . She had the opportunity that few clever women can resist , of showing her superiority in argument over a man . Women themselves have come to look_upon matters in the same light as the outside world , and scarcely find any wrong in submitting to the importunities of a stronger will , even when their affections are withheld . She was exposing herself to temptation which it is best to avoid where it can consistently be done .</context>
    </instance>
    <instance id="br-g31#w242_0" docsrc="br-g31">
      <context> His feeling always exacted sacrifices from her . One is so accustomed to think_of men as the privileged who need but ask and receive , and women as submissive and yielding , that our sympathies are usually enlisted on the side of the man whose love is not returned , and we condemn the woman as a coquette . The very firmness of her convictions and logical clearness of her arguments captivated and stimulated him to make greater efforts ; usually , this is most exasperating to men , who expect every woman to verify their preconceived_notions concerning her sex , and when she does not , immediately condemn her as eccentric and unwomanly . She had the opportunity that few clever women can resist , of showing her superiority in <head>argument</head> over a man . Women themselves have come to look_upon matters in the same light as the outside world , and scarcely find any wrong in submitting to the importunities of a stronger will , even when their affections are withheld . She was exposing herself to temptation which it is best to avoid where it can consistently be done . One who invites such trials of character is either foolhardy , overconfident or too simple and childlike in faith in mankind to see the danger .</context>
    </instance>
    <instance id="br-j11#w1115_0" docsrc="br-j11">
      <context> This approach rejects virtually all field measurements . The next level attempts to weigh varied evidence and come to a balanced , sensible conclusion ; field measurements by experienced explorers are not rejected , and even reports of a less scientific nature are duly evaluated . The third level leans_on a belief that a_lot of smoke means some fire . The <head>argument</head> against this last approach is comparable_to that which rejects stories about hoop_snakes , about snakes that break themselves into many pieces and join up again , or even of ghosts that chase people out of graveyards ; the mere piling_up of testimony does not prove , to the scientific mind , the existence of hoop_snakes , joint_snakes , or ghosts . Oliver has recently used the second level approach with the largest snakes , and has come to these conclusions : the anaconda reaches a length of at_least 37 feet , the reticulate python 33 , the African rock_python 25 , the amethystine_python at_least 22 , the Indian_python 20 , and the boa_constrictor 18 - 1_2 . Bernard_Heuvelmans also treats of the largest snakes , but on the third level , and is chiefly concerned with the anaconda .</context>
    </instance>
    <instance id="br-j20#w1186_0" docsrc="br-j20">
      <context> Thus **f is also continuous at **f , and in a neighborhood of **f which does not contain a tangent point . We turn now to the set of tangent points on the graph . This set must consist_of isolated points and closed_intervals . The fact that there can not be any limit_points of the set except in closed_intervals follows from the <head>argument</head> used in Lemma 1 , namely , that near any tangent point in the C-plane the curves C and **f are analytic , and therefore the difference between them must be a monotone function in some neighborhood on either side of the tangent point . This prevents the occurrence of an infinite sequence of isolated tangent points . In some neighborhood of an isolated tangent point in the f-plane , say **f , the function **f is either double valued or has no values defined , except at the tangent point itself , where it is single valued . A tangent point Q in the C-plane occurs when C and **f are tangent to one another .</context>
    </instance>
    <instance id="br-j20#w1602_0" docsrc="br-j20">
      <context> In the neighborhood of an end_point of an interval of tangent points in the f-plane the function is two valued or no valued on one side , and is a single valued function consisting entirely of tangent points on the other side . With the above results we can make the following remarks about the graph of f . First , for any value of t for which all values of f ( t ) are ordinary points the number of values of f ( t ) must be odd . For it is clear that the total number of ordinary intersections of C and **f must be even ( otherwise , starting in the interior of C , **f could not finally return to the interior ) , and the center of rotation at t is the <head>argument</head> of the function , not a value . Therefore , for any value of t the number of values of f ( t ) is equal to the ( finite ) number of tangent points corresponding to the argument t plus an odd number . The number of ordinary values of the function f ( t ) at t will be called its multiplicity at t . The graph of f has at_least one component whose support is the entire interval [ 0 , T ] .</context>
    </instance>
    <instance id="br-j20#w1641_0" docsrc="br-j20">
      <context> With the above results we can make the following remarks about the graph of f . First , for any value of t for which all values of f ( t ) are ordinary points the number of values of f ( t ) must be odd . For it is clear that the total number of ordinary intersections of C and **f must be even ( otherwise , starting in the interior of C , **f could not finally return to the interior ) , and the center of rotation at t is the argument of the function , not a value . Therefore , for any value of t the number of values of f ( t ) is equal to the ( finite ) number of tangent points corresponding to the <head>argument</head> t plus an odd number . The number of ordinary values of the function f ( t ) at t will be called its multiplicity at t . The graph of f has at_least one component whose support is the entire interval [ 0 , T ] . We suppose not .</context>
    </instance>
    <instance id="br-j20#w1895_0" docsrc="br-j20">
      <context> But this is a contradiction , for we know that the multiplicity of f ( t ) is odd for every t . We have shown that the graph of f contains at_least one component whose inverse is the entire interval [ 0 , T ] , and whose multiplicity is odd . There must be an odd number of such components , which will be called complete components . The remaining ( incomplete ) components all have an even number of ordinary points at any <head>argument</head> , and are defined only on a proper sub-interval of [ 0 , T ] . We must now show that on some component of the graph there exist two points for which the corresponding diagonal points in the C-plane are on opposite sides of C . We again consider a fixed point P at **f and a variable point Q at **f on C . We erect a square with PQ as a side and with free corners **f and **f adjacent to P and Q respectively .</context>
    </instance>
    <instance id="br-j20#w2121_0" docsrc="br-j20">
      <context> These s-values are just the ordinary values of **f . The values **f are the ordinary values at **f of a multi valued function g ( t ) which has components corresponding to those of f ( t ) . We first define a function b ( t ) as_follows : given the set of squares such_that each has three corners on C and vertex at t , b ( t ) is the corresponding set of positive parametric differences between t and the backward corner points . The functions f and b have exactly the same multiplicity at every <head>argument</head> t . Now with P fixed at **f , **f-values occur when the corner **f crosses C , and are among the values of s such_that **f . The roots of this equation are just the ordinates of the intersections of the graph of b with a straight_line of unit slope through **f in the b-plane ( the plane of the graph of b ) . We define these values as **f , and define g ( t ) in the same way for each t .</context>
    </instance>
    <instance id="br-j37#w1668_0" docsrc="br-j37">
      <context> Furthermore , the problems and solutions devised in the electoral experiences of the rapidly changing countries are often of comparative value and essential to evaluating election results . The sine_qua_non of the elections was naturally an impartial and standardized procedure . As the background discussion indicated there were frequently expressed doubts that a government dominated_by either party could fairly administer elections . The P.D.I. and later the Popular_Movement protected the Istiqlal 's `` privileged position '' until the fall of Balafrej , and_then the Istiqlal used the same <head>argument</head> , which it had previously ignored , against the pro U.N.F.P. tendencies of the Ibrahim government . The bulk of the preparation had , of_course , proceeded under the supervision of the Ministry_of_the_Interior , whose officials are barred from party activity and probably generally disinterested in party politics . Apart from some areas of recurring trouble , like Bani_Mellal , where inexperienced officials had been appointed , there is little evidence that local officials intervened in the electoral process . Centrally , however , the administrative problem was more complex and the sheer prestige of office was very likely an unfair advantage .</context>
    </instance>
    <instance id="br-j41#w1937_0" docsrc="br-j41">
      <context> The existence of conflict and of vigorous union demand for an increase in money wages does not contradict the assumption that the union is willing to settle for cost-of-living and productivity share increases as distinct from a cost raising increase in the basic wage rate . We assume further that the union recognizes the possibility that price level increases may offset wage rate increases , and it does not entirely disregard the effect of price increases arising from its own wage increases upon the `` real '' wage rate . For internal political reasons , the union asks for ( and accepts ) increases in the basic wage rate , and would vigorously oppose a reduction in this rate , but the adjustment of the basic wage rate upwards is essentially up_to the discretion of the companies of the industry . Changes in the basic wage rate are cost raising , and they constitute an <head>argument</head> for raising prices . However , it is not known to either the union or the public precisely how much of a cost increase is caused by a given change in the basic wage rate , although the companies are presumed to have reliable estimates of this magnitude . In this model , then , the industry is presumed to realize that they could successfully resist a change in the basic wage rate , but since such a change is the only effective means to raising prices they may , in circumstances to be spelled_out in Part 2 , below , find it to their advantage to allow the wage rise . Thus , for non negative changes in the basic wage rate , the industry becomes the active wage_setter , since any increase in the basic wage rate can occur only by reason of industry acquiescence .</context>
    </instance>
    <instance id="br-j41#w387_0" docsrc="br-j41">
      <context> Part 2 , discusses the operation of the model and derives some significant conclusions . Part 3 , discusses the empirical relevance and policy implications of the conclusions . Part 4 , is a brief summary . The Mathematical Appendix presents the rigorous <head>argument</head> , but is best read after Part 1 , in_order that the assumptions underlying the equations may be explicit . The industry with which this model is concerned is a basic industry , producing a substantial share of gross_national_product . Price_competition is lacking . For the purposes of setting the product price , the industry behaves as a single entity .</context>
    </instance>
    <instance id="br-j52#w1318_0" docsrc="br-j52">
      <context> And there is a way in which he might hold that badness did in this case precede our own feeling of disapproval without belonging_to the pain itself . The pain in itself was neutral ; but unfortunately the rabbit , on no grounds at_all , took_up toward this neutral object an attitude of disapproval and that made it for_the_first_time , and in the only intelligible sense , bad . This way of escape is theoretically possible , but since it has grave difficulties of its own and has not , so_far_as I know , been urged by positivists , it is perhaps best not to spend time over it . I come now to a third <head>argument</head> , which again is very simple . When we come_upon the rabbit and make our remark about its suffering being a bad thing , we presumably make it with some feeling ; the positivists are plainly right in saying that such remarks do usually express feeling . But suppose that a week later we revert to the incident in thought and make our statement again . And suppose that the circumstances have now so changed that the feeling with which we made the remark in_the_first_place has faded .</context>
    </instance>
    <instance id="br-j52#w757_0" docsrc="br-j52">
      <context> Indeed we should say , on_the_contrary , that the accident of our later discovery made no difference whatever to the badness of the animal 's pain , that it would have been every whit as bad whether a chance passer-by happened later to discover the body and feel repugnance or not . If so , then it is clear that in saying the suffering was bad we are not expressing our feelings only . We are saying that the pain was bad when and as it occurred and before anyone took an attitude toward it . The first <head>argument</head> is thus an ideal experiment in which we use the method of difference . It removes our present expression and shows that the badness we meant would not be affected by this , whereas on positivist grounds it should be . The second argument applies the method in the reverse way . It ideally removes the past event , and shows that this would render false what we mean to say , whereas on positivist grounds it should not .</context>
    </instance>
    <instance id="br-j52#w801_0" docsrc="br-j52">
      <context> We are saying that the pain was bad when and as it occurred and before anyone took an attitude toward it . The first argument is thus an ideal experiment in which we use the method of difference . It removes our present expression and shows that the badness we meant would not be affected by this , whereas on positivist grounds it should be . The second <head>argument</head> applies the method in the reverse way . It ideally removes the past event , and shows that this would render false what we mean to say , whereas on positivist grounds it should not . Let us suppose that the animal did not in_fact fall into the trap and did not suffer at_all , but that we mistakenly believe it did , and say as before that its suffering was an evil thing . On the positivist theory , everything I sought to express by calling it evil in the first case is still present in the second .</context>
    </instance>
    <instance id="br-j53#w1095_0" docsrc="br-j53">
      <context> Because of his brain injury and the extreme damage suffered to his sight , the patient had to train himself for a new line_of_work , that of a portfolio maker , an occupation requiring a great_deal of precision in the making of measurements and a fairly well developed sense of form and contour . It seems clear , when one takes into consideration the exceedingly defective eyesight of the patient ( we shall describe it in_detail in_connection_with our second question , the one concerning the psychical blindness of the patient ) , that he had to rely_on his sense_of_touch much more_than the usual portfolio maker and that consequently that faculty was most probably more sensitive to shape and size than that of a person with normal vision . And so the authors conclude : `` The conduct of the patient in his every-day life and in his work , even more_than the foregoing facts [ mentioned above under 1 ] , leave positively no room for doubt that the sense_of_touch , in the ordinary sense of the word , was unaffected ; or , to put the same thing in physiological terms , that the performance capacity of the tactual apparatus , from the periphery up to the tactual centers in the brain , - that_is , from one end to the other - was unimpaired '' . If the <head>argument</head> is accepted as essentially sound up to this point , it remains for us to consider whether the patient 's difficulties in orienting himself spatially and in locating objects in space with the sense_of_touch can be explained by his defective visual condition . But before we can do this , we must first find answers to our original questions 1 and 2 ; then we shall perhaps be in a position to provide something like a complete answer to the question at_hand . In what ways , then , did the patient 's psychical blindness manifest itself ? He could not see objects as unified , self-contained , and organized figures , as a person does with normal vision .</context>
    </instance>
    <instance id="br-j53#w493_0" docsrc="br-j53">
      <context> ( 2 ) What evidence is there that he was psychically blind ? ( 3 ) How can we be sure that his sense_of_touch was not profoundly disturbed by his head injury ? We shall consider these in the inverse order of their presentation . Obviously , a satisfactory answer to the third question is imperative , if the <head>argument</head> is to get under_way at_all , for if there is any possibility of doubt whether the patient 's tactual sensitivity had been impaired by the occipital lesion , any findings whatsoever in regard_to the first question become completely ambiguous and fail altogether , of_course , as evidence to establish the desired conclusion . The answer the authors give to it , therefore , is of supreme importance . It is as_follows : `` The usual sensitivity tests showed that the specific qualities of skin-perceptiveness ( pressure , pain , temperature ) , as_well_as the kinesthetic sensations ( muscular feelings , feelings in the tendons and joints ) , were , as_such , essentially intact , although they seemed , in_comparison_with normal reactions , to be somewhat diminished over the entire body . The supposed tactual sense of spatial location and orientation in the patient and his ability to specify the location of a member , as_well_as the direction and scope of a movement , passively executed ( with one of his members ) , proved to have been , on_the_contrary , very considerably affected '' .</context>
    </instance>
    <instance id="br-j60#w2024_0" docsrc="br-j60">
      <context> was a question that had to be asked long before they saw Paree . Though Americans usually lived in groups segregated by national origin or religious_belief , they liked to work and shop in the noise and vitality of downtown . Only a radical change in the nature of the population in the central_city would be likely to destroy this preference - and we must now turn our attention to the question of whether such a change , gloomily foreseen by so many urban diagnosticians , is actually upon us . In their book American_Skyline , Christopher_Tunnard and Henry_Hope_Reed argue that Franklin_Roosevelt 's New_Deal was what made the modern suburb a possibility - a fine ironical <head>argument</head> , when you consider how suburbanites tend to vote . The first superhighways - New_York 's Henry_Hudson and Chicago 's Lake_Shore , San_Francisco 's Bay_Bridge and its approaches , a good slice of the Pennsylvania_Turnpike - were built as part of the federal works_program which was going_to cure the depression . At_the_same_time , Roosevelt 's Federal_Housing_Administration , coupled with Henry_Morgenthau 's cheap-money policy , permitted ordinary lower-middle-class families to build their own homes . Bankers who had been reluctant to lend without better security than the house itself got that security from the U._S. government ; householders who had been unable to pick_up the burden of short-term high interest mortgages found they could borrow for twenty-five years at 4 per_cent , under government aegis .</context>
    </instance>
    <instance id="br-k01#w134_0" docsrc="br-k01">
      <context> Scotty did not go_back to school . His parents talked seriously and lengthily to their own doctor and to a specialist at the University_Hospital - Mr._McKinley was entitled to a discount for members of his family - and it was decided it would be best for him to take the remainder of the term off , spend a_lot of time in bed and , for the rest , do pretty_much as he chose - provided , of_course , he chose to do nothing too exciting or too debilitating . His teacher and his school_principal were conferred_with and everyone agreed that , if he kept_up with a certain amount of work at home , there was little danger of his losing a term . Scotty accepted the decision with indifference and did not enter the <head>arguments</head> . He was discharged from the hospital after a two day checkup and he and his parents had what Mr._McKinley described as a `` celebration lunch '' at the cafeteria on the campus . Rachel wore a smart hat and , because she had been warned recently about smoking , puffed at her cigarettes through a long ivory holder stained with lipstick . Scotty 's father sat sprawled in his chair , angular , alert as a cricket , looking about at the huge stainless-steel appointments of the room with an expression of proprietorship .</context>
    </instance>
    <instance id="br-k04#w1637_0" docsrc="br-k04">
      <context> The very proposition was sacrilege . It had been here fifty years . It was going_to stay forever . It was hardly possible to get any <head>argument</head> on the subject . As for rebuilding , well , that might be looked_into , but there was no hurry , no hurry at_all . Wilson again went downtown to a different banker , an intelligent young white_man who seemed rather sympathetic , but he shook his head . `` Reverend '' , he said , `` I think you do n't quite understand the situation here .</context>
    </instance>
    <instance id="br-k19#w522_0" docsrc="br-k19">
      <context> Hino was elated at the prospect . He was allowed to spend his nights at an inn near the hospital and he was given some extra money to go_to the pachinko parlor - an excellent place to make contact with the enemy . He left with all the joyous spirit of a child going on a holiday , nodding attentively as Rector gave him his final instructions . He was to get involved in no <head>arguments</head> ; he was to try to make no converts ; he was simply to listen and report back what he heard . It was a ridiculous situation and Rector knew it , for Hino , frankly partisan , openly gregarious , would make a poor espionage_agent . If he wanted to know anything , he would end_up asking about it point-blank , but in this guileless manner he would probably receive more truthful answers than if he tried to get them by indirection . In all of his experience in the mission field Rector had never seen a convert quite like Hino .</context>
    </instance>
    <instance id="br-l08#w1716_0" docsrc="br-l08">
      <context> Not when she 'd waited so long already . No need say anything at_all to the old_woman . She had it all planned out , how she 'd do . She 'd say she did n't feel good on Sunday , could n't go_to church - there 'd be a little <head>argument</head> , but she could be stubborn - and when the old_woman had gone , quick pack the things she 'd need to take , all but the dress she 'd wear Monday , and take the bag down to that place in the station where you could put things in a locker overnight , for a dime . Then on Monday morning - or it might have to be Tuesday - get_up and leave just the usual time , and last thing , put the money in an envelope under the old_woman 's purse there in the drawer . She would n't be going_to get that for an hour or_so after Katya had left , go do the daily shopping . No need leave a note with it , either - or maybe just something like , Do n't worry about me , I 'm going_away to make a better life .</context>
    </instance>
    <instance id="br-l09#w869_0" docsrc="br-l09">
      <context> She began to doubt whether there had been in_fact a lethal_dose of opium in the cup . So suppose somebody only wished to frighten her , so she would leave Honotassa ! That made a certain amount of logic . Added to the <head>argument</head> was the fact that while she might have tasted the coffee if it had been still hot , she might even have drunk some of it , she would n't have taken enough to kill her , for she would have been warned by its taste . No . It was merely an attempt to frighten her . She would n't go_back to New_York as Maude suggested ; she would n't run like a scared cat .</context>
    </instance>
    <instance id="br-l17#w1505_0" docsrc="br-l17">
      <context> `` I should n't like to have to write you up for insubordination as_well as dereliction of duty '' . Gun stiffened , his hands balling into fists at his sides . He clamped his jaws to keep the fury from spilling_out . An <head>argument</head> with Orville_Torrence_Killpath was as frustrating and as futile as a cap pistol on a firing_range . Killpath leaned forward again , rocked comfortably with his arms still wrapped around one knee . `` Let 's just remember , Sergeant , that we must all carry_our_own_umbrella . A district station can n't run smoothly , unless '' - He interrupted himself , looking around Gun at the doorway .</context>
    </instance>
  </lexelt>
</corpus>
