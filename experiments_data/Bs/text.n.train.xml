<?xml version='1.0' encoding='UTF-8'?>
<corpus lang="en">
  <lexelt item="text.n" pos="NN">
    <instance id="br-d01#w1343_0" docsrc="br-d01">
      <context> In our disbelief we think that we can no_longer even use the word and so are unable to even name the elemental power which is so vividly real in_this play . We are left helpless to cope_with it because we do not dare speak of it as anything real for fear that to do so would imply a commitment to that which has already been discredited and proved false . Even Mr._Miller himself seems uncertain on this score . In a long commentary which he has inserted in the published <head>text</head> of the first act of the play , he says at one point : `` However , that experience never raised a doubt in his mind as to the reality of the underworld or the existence of Lucifer 's many faced lieutenants . And his belief is not to his discredit . Better minds than Hale 's were - and still are - convinced that there is a society of spirits beyond our ken '' . ( page 33 ) On_the_other_hand , a_little later_on he says :</context>
    </instance>
    <instance id="br-h13#w1117_0" docsrc="br-h13">
      <context> The people of the 17_th District of New_York , and I as their Representative in Congress , take great pride in the New_York_Times as one of the great and authoritative newspapers of the world . Mr._Speaker , in my latest newsletter to my constituents I urged the imposition of a naval_blockade of Cuba as the only effective method of preventing continued Soviet armaments from coming into the Western_Hemisphere in violation of the Monroe_Doctrine . Yesterday , I had the privilege of reading a thoughtful article in the U._S._News_+_World_Report of May 8 which discussed this type of action in more detail , including both its advantages and its disadvantages . Under leave to extend my remarks , I include the relevant portion of my newsletter , together with the <head>text</head> of the article from the U._S._News_+_World_Report : `` Cuban S._S._R. : Whatever may have been the setbacks resulting from the unsuccessful attempt of the Cuban rebels to establish a beachhead on the Castro held mainland last week , there was at_least one positive benefit , and that was the clear-cut revelation to the whole world of the complete conversion of Cuba into a Russian dominated military base . In_fact , one of the major reasons for the failure of the ill-starred expedition appears to have been a lack of full information on the extent to which Cuba has been getting this Russian military equipment .</context>
    </instance>
    <instance id="br-j32#w1145_0" docsrc="br-j32">
      <context> Each cell except the last in the chain also contains the address of the Y-cell that is the next element of the chain ; the absence of such a link in the last cell indicates the end of the chain . Hence , when the address * * f is computed from * * f , the cell * * f and all Y-cells in its chain must be inspected to determine whether * * f is already in the form list or whether it should be added to the form list and the chain . When the information cell for * * f has been determined , it is saved as a representation of * * f . <head>Text</head> reading continues with the next occurrence . Text reading is terminated when a pre-determined number of forms have been stored in the text form list . This initiates the second step of glossary lookup - connecting the information cell of forms in the text form list to dictionary forms . Each form represented by the dictionary is looked_up in the text form list .</context>
    </instance>
    <instance id="br-j32#w1153_0" docsrc="br-j32">
      <context> Hence , when the address * * f is computed from * * f , the cell * * f and all Y-cells in its chain must be inspected to determine whether * * f is already in the form list or whether it should be added to the form list and the chain . When the information cell for * * f has been determined , it is saved as a representation of * * f . Text reading continues with the next occurrence . <head>Text</head> reading is terminated when a pre-determined number of forms have been stored in the text form list . This initiates the second step of glossary lookup - connecting the information cell of forms in the text form list to dictionary forms . Each form represented by the dictionary is looked_up in the text form list . Each time a dictionary form matches a text form , the information cell of the matching text form is saved .</context>
    </instance>
    <instance id="br-j32#w1168_0" docsrc="br-j32">
      <context> Hence , when the address * * f is computed from * * f , the cell * * f and all Y-cells in its chain must be inspected to determine whether * * f is already in the form list or whether it should be added to the form list and the chain . When the information cell for * * f has been determined , it is saved as a representation of * * f . Text reading continues with the next occurrence . Text reading is terminated when a pre-determined number of forms have been stored in the <head>text</head> form list . This initiates the second step of glossary lookup - connecting the information cell of forms in the text form list to dictionary forms . Each form represented by the dictionary is looked_up in the text form list . Each time a dictionary form matches a text form , the information cell of the matching text form is saved .</context>
    </instance>
    <instance id="br-j32#w1189_0" docsrc="br-j32">
      <context> When the information cell for * * f has been determined , it is saved as a representation of * * f . Text reading continues with the next occurrence . Text reading is terminated when a pre-determined number of forms have been stored in the text form list . This initiates the second step of glossary lookup - connecting the information cell of forms in the <head>text</head> form list to dictionary forms . Each form represented by the dictionary is looked_up in the text form list . Each time a dictionary form matches a text form , the information cell of the matching text form is saved . The number of dictionary forms skipped since the last one matched is also saved .</context>
    </instance>
    <instance id="br-j32#w1206_0" docsrc="br-j32">
      <context> Text reading continues with the next occurrence . Text reading is terminated when a pre-determined number of forms have been stored in the text form list . This initiates the second step of glossary lookup - connecting the information cell of forms in the text form list to dictionary forms . Each form represented by the dictionary is looked_up in the <head>text</head> form list . Each time a dictionary form matches a text form , the information cell of the matching text form is saved . The number of dictionary forms skipped since the last one matched is also saved . These two pieces of information for each dictionary form that is matched by a text form constitute the table of dictionary usage .</context>
    </instance>
    <instance id="br-j32#w1217_0" docsrc="br-j32">
      <context> Text reading is terminated when a pre-determined number of forms have been stored in the text form list . This initiates the second step of glossary lookup - connecting the information cell of forms in the text form list to dictionary forms . Each form represented by the dictionary is looked_up in the text form list . Each time a dictionary form matches a <head>text</head> form , the information cell of the matching text form is saved . The number of dictionary forms skipped since the last one matched is also saved . These two pieces of information for each dictionary form that is matched by a text form constitute the table of dictionary usage . If each text form is marked when matched with a dictionary form , the text forms not contained in the dictionary can be identified when all dictionary forms have been read .</context>
    </instance>
    <instance id="br-j32#w1226_0" docsrc="br-j32">
      <context> Text reading is terminated when a pre-determined number of forms have been stored in the text form list . This initiates the second step of glossary lookup - connecting the information cell of forms in the text form list to dictionary forms . Each form represented by the dictionary is looked_up in the text form list . Each time a dictionary form matches a text form , the information cell of the matching <head>text</head> form is saved . The number of dictionary forms skipped since the last one matched is also saved . These two pieces of information for each dictionary form that is matched by a text form constitute the table of dictionary usage . If each text form is marked when matched with a dictionary form , the text forms not contained in the dictionary can be identified when all dictionary forms have been read .</context>
    </instance>
    <instance id="br-j32#w1260_0" docsrc="br-j32">
      <context> Each form represented by the dictionary is looked_up in the text form list . Each time a dictionary form matches a text form , the information cell of the matching text form is saved . The number of dictionary forms skipped since the last one matched is also saved . These two pieces of information for each dictionary form that is matched by a <head>text</head> form constitute the table of dictionary usage . If each text form is marked when matched with a dictionary form , the text forms not contained in the dictionary can be identified when all dictionary forms have been read . The appropriate action for handling these forms can be taken at that time . Each dictionary form is looked_up in the text form list by the same method used to look_up a new text occurrence in the form list during text reading .</context>
    </instance>
    <instance id="br-j32#w1271_0" docsrc="br-j32">
      <context> Each time a dictionary form matches a text form , the information cell of the matching text form is saved . The number of dictionary forms skipped since the last one matched is also saved . These two pieces of information for each dictionary form that is matched by a text form constitute the table of dictionary usage . If each <head>text</head> form is marked when matched with a dictionary form , the text forms not contained in the dictionary can be identified when all dictionary forms have been read . The appropriate action for handling these forms can be taken at that time . Each dictionary form is looked_up in the text form list by the same method used to look_up a new text occurrence in the form list during text reading . A random address * * f that lies within the X-region of memory mentioned earlier is computed from the i-th dictionary form .</context>
    </instance>
    <instance id="br-j32#w1283_0" docsrc="br-j32">
      <context> Each time a dictionary form matches a text form , the information cell of the matching text form is saved . The number of dictionary forms skipped since the last one matched is also saved . These two pieces of information for each dictionary form that is matched by a text form constitute the table of dictionary usage . If each text form is marked when matched with a dictionary form , the <head>text</head> forms not contained in the dictionary can be identified when all dictionary forms have been read . The appropriate action for handling these forms can be taken at that time . Each dictionary form is looked_up in the text form list by the same method used to look_up a new text occurrence in the form list during text reading . A random address * * f that lies within the X-region of memory mentioned earlier is computed from the i-th dictionary form .</context>
    </instance>
    <instance id="br-j32#w1322_0" docsrc="br-j32">
      <context> These two pieces of information for each dictionary form that is matched by a text form constitute the table of dictionary usage . If each text form is marked when matched with a dictionary form , the text forms not contained in the dictionary can be identified when all dictionary forms have been read . The appropriate action for handling these forms can be taken at that time . Each dictionary form is looked_up in the <head>text</head> form list by the same method used to look_up a new text occurrence in the form list during text reading . A random address * * f that lies within the X-region of memory mentioned earlier is computed from the i-th dictionary form . If cell * * f is an information cell , it and any information cells in the Y-region that have been linked to * * f each contain an address in the W-region where a potentially matching form is stored . The dictionary form is compared with each of these text forms .</context>
    </instance>
    <instance id="br-j32#w1334_0" docsrc="br-j32">
      <context> These two pieces of information for each dictionary form that is matched by a text form constitute the table of dictionary usage . If each text form is marked when matched with a dictionary form , the text forms not contained in the dictionary can be identified when all dictionary forms have been read . The appropriate action for handling these forms can be taken at that time . Each dictionary form is looked_up in the text form list by the same method used to look_up a new <head>text</head> occurrence in the form list during text reading . A random address * * f that lies within the X-region of memory mentioned earlier is computed from the i-th dictionary form . If cell * * f is an information cell , it and any information cells in the Y-region that have been linked to * * f each contain an address in the W-region where a potentially matching form is stored . The dictionary form is compared with each of these text forms .</context>
    </instance>
    <instance id="br-j32#w1341_0" docsrc="br-j32">
      <context> These two pieces of information for each dictionary form that is matched by a text form constitute the table of dictionary usage . If each text form is marked when matched with a dictionary form , the text forms not contained in the dictionary can be identified when all dictionary forms have been read . The appropriate action for handling these forms can be taken at that time . Each dictionary form is looked_up in the text form list by the same method used to look_up a new text occurrence in the form list during <head>text</head> reading . A random address * * f that lies within the X-region of memory mentioned earlier is computed from the i-th dictionary form . If cell * * f is an information cell , it and any information cells in the Y-region that have been linked to * * f each contain an address in the W-region where a potentially matching form is stored . The dictionary form is compared with each of these text forms .</context>
    </instance>
    <instance id="br-j32#w1417_0" docsrc="br-j32">
      <context> Each dictionary form is looked_up in the text form list by the same method used to look_up a new text occurrence in the form list during text reading . A random address * * f that lies within the X-region of memory mentioned earlier is computed from the i-th dictionary form . If cell * * f is an information cell , it and any information cells in the Y-region that have been linked to * * f each contain an address in the W-region where a potentially matching form is stored . The dictionary form is compared with each of these <head>text</head> forms . When a match is found , an entry is made in the table of dictionary usage . If cell * * f is not an information cell we conclude that the i-th dictionary form is not in the text list . These two steps essentially complete the lookup operation .</context>
    </instance>
    <instance id="br-j32#w1458_0" docsrc="br-j32">
      <context> If cell * * f is an information cell , it and any information cells in the Y-region that have been linked to * * f each contain an address in the W-region where a potentially matching form is stored . The dictionary form is compared with each of these text forms . When a match is found , an entry is made in the table of dictionary usage . If cell * * f is not an information cell we conclude that the i-th dictionary form is not in the <head>text</head> list . These two steps essentially complete the lookup operation . The final step merely uses the table of dictionary usage to select the dictionary information that pertains to each form matched in the text form list , and uses the list of information cells recorded in text order to attach the appropriate information to each occurrence in text . The list of text forms in the W-region of memory and the contents of the information cells in the X and Y-regions are no_longer required .</context>
    </instance>
    <instance id="br-j32#w1493_0" docsrc="br-j32">
      <context> When a match is found , an entry is made in the table of dictionary usage . If cell * * f is not an information cell we conclude that the i-th dictionary form is not in the text list . These two steps essentially complete the lookup operation . The final step merely uses the table of dictionary usage to select the dictionary information that pertains to each form matched in the <head>text</head> form list , and uses the list of information cells recorded in text order to attach the appropriate information to each occurrence in text . The list of text forms in the W-region of memory and the contents of the information cells in the X and Y-regions are no_longer required . Only the assignment of the information cells is important . The first stage of translation after glossary lookup is structural analysis of the input text .</context>
    </instance>
    <instance id="br-j32#w1506_0" docsrc="br-j32">
      <context> When a match is found , an entry is made in the table of dictionary usage . If cell * * f is not an information cell we conclude that the i-th dictionary form is not in the text list . These two steps essentially complete the lookup operation . The final step merely uses the table of dictionary usage to select the dictionary information that pertains to each form matched in the text form list , and uses the list of information cells recorded in <head>text</head> order to attach the appropriate information to each occurrence in text . The list of text forms in the W-region of memory and the contents of the information cells in the X and Y-regions are no_longer required . Only the assignment of the information cells is important . The first stage of translation after glossary lookup is structural analysis of the input text .</context>
    </instance>
    <instance id="br-j32#w1517_0" docsrc="br-j32">
      <context> When a match is found , an entry is made in the table of dictionary usage . If cell * * f is not an information cell we conclude that the i-th dictionary form is not in the text list . These two steps essentially complete the lookup operation . The final step merely uses the table of dictionary usage to select the dictionary information that pertains to each form matched in the text form list , and uses the list of information cells recorded in text order to attach the appropriate information to each occurrence in <head>text</head> . The list of text forms in the W-region of memory and the contents of the information cells in the X and Y-regions are no_longer required . Only the assignment of the information cells is important . The first stage of translation after glossary lookup is structural analysis of the input text .</context>
    </instance>
    <instance id="br-j32#w1522_0" docsrc="br-j32">
      <context> If cell * * f is not an information cell we conclude that the i-th dictionary form is not in the text list . These two steps essentially complete the lookup operation . The final step merely uses the table of dictionary usage to select the dictionary information that pertains to each form matched in the text form list , and uses the list of information cells recorded in text order to attach the appropriate information to each occurrence in text . The list of <head>text</head> forms in the W-region of memory and the contents of the information cells in the X and Y-regions are no_longer required . Only the assignment of the information cells is important . The first stage of translation after glossary lookup is structural analysis of the input text . The grammatical description of each occurrence in the text must be retrieved from the dictionary to permit such an analysis .</context>
    </instance>
    <instance id="br-j32#w1569_0" docsrc="br-j32">
      <context> The final step merely uses the table of dictionary usage to select the dictionary information that pertains to each form matched in the text form list , and uses the list of information cells recorded in text order to attach the appropriate information to each occurrence in text . The list of text forms in the W-region of memory and the contents of the information cells in the X and Y-regions are no_longer required . Only the assignment of the information cells is important . The first stage of translation after glossary lookup is structural analysis of the input <head>text</head> . The grammatical description of each occurrence in the text must be retrieved from the dictionary to permit such an analysis . A description of this process will serve to illustrate how any type of information can be retrieved from the dictionary and attached to each text occurrence . The grammatic descriptions of all forms in the dictionary are recorded in a separate part of the dictionary file .</context>
    </instance>
    <instance id="br-j32#w1579_0" docsrc="br-j32">
      <context> The list of text forms in the W-region of memory and the contents of the information cells in the X and Y-regions are no_longer required . Only the assignment of the information cells is important . The first stage of translation after glossary lookup is structural analysis of the input text . The grammatical description of each occurrence in the <head>text</head> must be retrieved from the dictionary to permit such an analysis . A description of this process will serve to illustrate how any type of information can be retrieved from the dictionary and attached to each text occurrence . The grammatic descriptions of all forms in the dictionary are recorded in a separate part of the dictionary file . The order is identical to the ordering of the forms they describe .</context>
    </instance>
    <instance id="br-j32#w1616_0" docsrc="br-j32">
      <context> Only the assignment of the information cells is important . The first stage of translation after glossary lookup is structural analysis of the input text . The grammatical description of each occurrence in the text must be retrieved from the dictionary to permit such an analysis . A description of this process will serve to illustrate how any type of information can be retrieved from the dictionary and attached to each <head>text</head> occurrence . The grammatic descriptions of all forms in the dictionary are recorded in a separate part of the dictionary file . The order is identical to the ordering of the forms they describe . When entries are being retrieved from this file , the table of dictionary usage indicates which entries to skip and which entries to store in the computer .</context>
    </instance>
    <instance id="br-j32#w1762_0" docsrc="br-j32">
      <context> Each entry that is selected for storage is written into the next available cells of the W-region . The address of the first cell and the number of cells used is written in the information cell for the form . ( The address of the information cell is also supplied by the table of dictionary usage . ) When the complete file has been read , the grammatic descriptions for all <head>text</head> forms found in the dictionary have been stored in the W-region ; the information cell assigned to each text form contains the address of the grammatic description of the form it represents . Hence , the description of each text occurrence can be retrieved by reading the list of text ordered information cell addresses and outputting the description indicated by the information cell for each occurrence . The only requirements on dictionary information made by the text lookup operation are that each form represented by the dictionary be available for lookup in the text form list and that information for each form be available in a sequence identical with the sequence of the forms . This leaves the ordering of entries variable .</context>
    </instance>
    <instance id="br-j32#w1781_0" docsrc="br-j32">
      <context> Each entry that is selected for storage is written into the next available cells of the W-region . The address of the first cell and the number of cells used is written in the information cell for the form . ( The address of the information cell is also supplied by the table of dictionary usage . ) When the complete file has been read , the grammatic descriptions for all text forms found in the dictionary have been stored in the W-region ; the information cell assigned to each <head>text</head> form contains the address of the grammatic description of the form it represents . Hence , the description of each text occurrence can be retrieved by reading the list of text ordered information cell addresses and outputting the description indicated by the information cell for each occurrence . The only requirements on dictionary information made by the text lookup operation are that each form represented by the dictionary be available for lookup in the text form list and that information for each form be available in a sequence identical with the sequence of the forms . This leaves the ordering of entries variable .</context>
    </instance>
    <instance id="br-j32#w1802_0" docsrc="br-j32">
      <context> The address of the first cell and the number of cells used is written in the information cell for the form . ( The address of the information cell is also supplied by the table of dictionary usage . ) When the complete file has been read , the grammatic descriptions for all text forms found in the dictionary have been stored in the W-region ; the information cell assigned to each text form contains the address of the grammatic description of the form it represents . Hence , the description of each <head>text</head> occurrence can be retrieved by reading the list of text ordered information cell addresses and outputting the description indicated by the information cell for each occurrence . The only requirements on dictionary information made by the text lookup operation are that each form represented by the dictionary be available for lookup in the text form list and that information for each form be available in a sequence identical with the sequence of the forms . This leaves the ordering of entries variable . ( Here an entry is a form plus the information that pertains to it . )</context>
    </instance>
    <instance id="br-j32#w1812_0" docsrc="br-j32">
      <context> The address of the first cell and the number of cells used is written in the information cell for the form . ( The address of the information cell is also supplied by the table of dictionary usage . ) When the complete file has been read , the grammatic descriptions for all text forms found in the dictionary have been stored in the W-region ; the information cell assigned to each text form contains the address of the grammatic description of the form it represents . Hence , the description of each text occurrence can be retrieved by reading the list of <head>text</head> ordered information cell addresses and outputting the description indicated by the information cell for each occurrence . The only requirements on dictionary information made by the text lookup operation are that each form represented by the dictionary be available for lookup in the text form list and that information for each form be available in a sequence identical with the sequence of the forms . This leaves the ordering of entries variable . ( Here an entry is a form plus the information that pertains to it . )</context>
    </instance>
    <instance id="br-j32#w1839_0" docsrc="br-j32">
      <context> ( The address of the information cell is also supplied by the table of dictionary usage . ) When the complete file has been read , the grammatic descriptions for all text forms found in the dictionary have been stored in the W-region ; the information cell assigned to each text form contains the address of the grammatic description of the form it represents . Hence , the description of each text occurrence can be retrieved by reading the list of text ordered information cell addresses and outputting the description indicated by the information cell for each occurrence . The only requirements on dictionary information made by the <head>text</head> lookup operation are that each form represented by the dictionary be available for lookup in the text form list and that information for each form be available in a sequence identical with the sequence of the forms . This leaves the ordering of entries variable . ( Here an entry is a form plus the information that pertains to it . ) Two very useful ways for modifying a form dictionary are the addition to the dictionary of complete paradigms rather than single forms and the application of a single change to more_than one dictionary form .</context>
    </instance>
    <instance id="br-j32#w1856_0" docsrc="br-j32">
      <context> ( The address of the information cell is also supplied by the table of dictionary usage . ) When the complete file has been read , the grammatic descriptions for all text forms found in the dictionary have been stored in the W-region ; the information cell assigned to each text form contains the address of the grammatic description of the form it represents . Hence , the description of each text occurrence can be retrieved by reading the list of text ordered information cell addresses and outputting the description indicated by the information cell for each occurrence . The only requirements on dictionary information made by the text lookup operation are that each form represented by the dictionary be available for lookup in the <head>text</head> form list and that information for each form be available in a sequence identical with the sequence of the forms . This leaves the ordering of entries variable . ( Here an entry is a form plus the information that pertains to it . ) Two very useful ways for modifying a form dictionary are the addition to the dictionary of complete paradigms rather than single forms and the application of a single change to more_than one dictionary form .</context>
    </instance>
    <instance id="br-j32#w202_0" docsrc="br-j32">
      <context> We suggest the application of certain data-processing techniques as a solution to the problem . But first , we must define two terms so that their meaning will be clearly understood : form - any unique sequence of alphabetic_characters that can appear in a language preceded and followed by a space . occurrence - an instance of a form in <head>text</head> . We propose a method for selecting only dictionary information required by the text being translated and a means for passing the information directly to the occurrences in text . We accomplish this by compiling a list of text forms as text is read by the computer . A random storage scheme , based on the spelling of forms , provides an economical way to compile this text form list .</context>
    </instance>
    <instance id="br-j32#w2161_0" docsrc="br-j32">
      <context> If all forms of a paradigm are grouped together within the dictionary , a considerable reduction in the amount of information required is possible . For_example , the inflected forms of a word can be represented , insofar as regular inflection allows , by a stem and a set of endings to be attached . ( Indeed , the set of endings can be replaced by the name of a set of endings . ) The full forms can be derived from such information just prior to the lookup of the form in the <head>text</head> form list . Similarly , if the equivalents for the forms of a word do not vary , the equivalents need be entered only once with an indication that they apply to each form . The dictionary system is in_no_way dependent upon such summarization or designed around it . When irregularity and variation prevent summarizing , information is written in complete detail .</context>
    </instance>
    <instance id="br-j32#w216_0" docsrc="br-j32">
      <context> But first , we must define two terms so that their meaning will be clearly understood : form - any unique sequence of alphabetic_characters that can appear in a language preceded and followed by a space . occurrence - an instance of a form in text . We propose a method for selecting only dictionary information required by the <head>text</head> being translated and a means for passing the information directly to the occurrences in text . We accomplish this by compiling a list of text forms as text is read by the computer . A random storage scheme , based on the spelling of forms , provides an economical way to compile this text form list . Dictionary forms found to match forms in the text list are marked .</context>
    </instance>
    <instance id="br-j32#w231_0" docsrc="br-j32">
      <context> But first , we must define two terms so that their meaning will be clearly understood : form - any unique sequence of alphabetic_characters that can appear in a language preceded and followed by a space . occurrence - an instance of a form in text . We propose a method for selecting only dictionary information required by the text being translated and a means for passing the information directly to the occurrences in <head>text</head> . We accomplish this by compiling a list of text forms as text is read by the computer . A random storage scheme , based on the spelling of forms , provides an economical way to compile this text form list . Dictionary forms found to match forms in the text list are marked .</context>
    </instance>
    <instance id="br-j32#w241_0" docsrc="br-j32">
      <context> form - any unique sequence of alphabetic_characters that can appear in a language preceded and followed by a space . occurrence - an instance of a form in text . We propose a method for selecting only dictionary information required by the text being translated and a means for passing the information directly to the occurrences in text . We accomplish this by compiling a list of <head>text</head> forms as text is read by the computer . A random storage scheme , based on the spelling of forms , provides an economical way to compile this text form list . Dictionary forms found to match forms in the text list are marked . A location in the computer store is also named for each marked form ; dictionary information about the form stored at this location can be retrieved directly by occurrences of the form in text .</context>
    </instance>
    <instance id="br-j32#w244_0" docsrc="br-j32">
      <context> form - any unique sequence of alphabetic_characters that can appear in a language preceded and followed by a space . occurrence - an instance of a form in text . We propose a method for selecting only dictionary information required by the text being translated and a means for passing the information directly to the occurrences in text . We accomplish this by compiling a list of text forms as <head>text</head> is read by the computer . A random storage scheme , based on the spelling of forms , provides an economical way to compile this text form list . Dictionary forms found to match forms in the text list are marked . A location in the computer store is also named for each marked form ; dictionary information about the form stored at this location can be retrieved directly by occurrences of the form in text .</context>
    </instance>
    <instance id="br-j32#w270_0" docsrc="br-j32">
      <context> occurrence - an instance of a form in text . We propose a method for selecting only dictionary information required by the text being translated and a means for passing the information directly to the occurrences in text . We accomplish this by compiling a list of text forms as text is read by the computer . A random storage scheme , based on the spelling of forms , provides an economical way to compile this <head>text</head> form list . Dictionary forms found to match forms in the text list are marked . A location in the computer store is also named for each marked form ; dictionary information about the form stored at this location can be retrieved directly by occurrences of the form in text . Finally , information is retrieved from the dictionary as_required by stages of the translation process - the grammatic description for sentence-structure determination , equivalent choice information for semantic analysis , and target-language equivalents for output construction .</context>
    </instance>
    <instance id="br-j32#w282_0" docsrc="br-j32">
      <context> We propose a method for selecting only dictionary information required by the text being translated and a means for passing the information directly to the occurrences in text . We accomplish this by compiling a list of text forms as text is read by the computer . A random storage scheme , based on the spelling of forms , provides an economical way to compile this text form list . Dictionary forms found to match forms in the <head>text</head> list are marked . A location in the computer store is also named for each marked form ; dictionary information about the form stored at this location can be retrieved directly by occurrences of the form in text . Finally , information is retrieved from the dictionary as_required by stages of the translation process - the grammatic description for sentence-structure determination , equivalent choice information for semantic analysis , and target-language equivalents for output construction . The dictionary is a form dictionary , at_least in the sense that complete forms are used as the basis for matching text occurrences with dictionary_entries .</context>
    </instance>
    <instance id="br-j32#w320_0" docsrc="br-j32">
      <context> We accomplish this by compiling a list of text forms as text is read by the computer . A random storage scheme , based on the spelling of forms , provides an economical way to compile this text form list . Dictionary forms found to match forms in the text list are marked . A location in the computer store is also named for each marked form ; dictionary information about the form stored at this location can be retrieved directly by occurrences of the form in <head>text</head> . Finally , information is retrieved from the dictionary as_required by stages of the translation process - the grammatic description for sentence-structure determination , equivalent choice information for semantic analysis , and target-language equivalents for output construction . The dictionary is a form dictionary , at_least in the sense that complete forms are used as the basis for matching text occurrences with dictionary_entries . Also , the dictionary is divided into at_least two parts :</context>
    </instance>
    <instance id="br-j32#w380_0" docsrc="br-j32">
      <context> Dictionary forms found to match forms in the text list are marked . A location in the computer store is also named for each marked form ; dictionary information about the form stored at this location can be retrieved directly by occurrences of the form in text . Finally , information is retrieved from the dictionary as_required by stages of the translation process - the grammatic description for sentence-structure determination , equivalent choice information for semantic analysis , and target-language equivalents for output construction . The dictionary is a form dictionary , at_least in the sense that complete forms are used as the basis for matching <head>text</head> occurrences with dictionary_entries . Also , the dictionary is divided into at_least two parts : the list of dictionary forms and the file of information that pertains to these forms . A more detailed description of dictionary operations - text lookup and dictionary modification - give a clearer picture .</context>
    </instance>
    <instance id="br-j32#w420_0" docsrc="br-j32">
      <context> The dictionary is a form dictionary , at_least in the sense that complete forms are used as the basis for matching text occurrences with dictionary_entries . Also , the dictionary is divided into at_least two parts : the list of dictionary forms and the file of information that pertains to these forms . A more detailed description of dictionary operations - <head>text</head> lookup and dictionary modification - give a clearer picture . Text lookup , as we will describe it , consists_of three steps . The first is compiling a list of text forms , assigning an information cell to each , and replacing text occurrences with the information cell assigned to the form of each occurrence . For this step the computer memory is separated into three regions : cells in the W_region are used for storage of the forms in the text form list ; cells in the X-region and Y_region are reserved as information cells for text forms .</context>
    </instance>
    <instance id="br-j32#w431_0" docsrc="br-j32">
      <context> Also , the dictionary is divided into at_least two parts : the list of dictionary forms and the file of information that pertains to these forms . A more detailed description of dictionary operations - text lookup and dictionary modification - give a clearer picture . <head>Text</head> lookup , as we will describe it , consists_of three steps . The first is compiling a list of text forms , assigning an information cell to each , and replacing text occurrences with the information cell assigned to the form of each occurrence . For this step the computer memory is separated into three regions : cells in the W_region are used for storage of the forms in the text form list ; cells in the X-region and Y_region are reserved as information cells for text forms . When an occurrence * * f is isolated during text reading , a random_memory address * * f , the address of a cell in the X-region , is computed from the form of * * f .</context>
    </instance>
    <instance id="br-j32#w451_0" docsrc="br-j32">
      <context> the list of dictionary forms and the file of information that pertains to these forms . A more detailed description of dictionary operations - text lookup and dictionary modification - give a clearer picture . Text lookup , as we will describe it , consists_of three steps . The first is compiling a list of <head>text</head> forms , assigning an information cell to each , and replacing text occurrences with the information cell assigned to the form of each occurrence . For this step the computer memory is separated into three regions : cells in the W_region are used for storage of the forms in the text form list ; cells in the X-region and Y_region are reserved as information cells for text forms . When an occurrence * * f is isolated during text reading , a random_memory address * * f , the address of a cell in the X-region , is computed from the form of * * f . Let * * f denote the form of * * f .</context>
    </instance>
    <instance id="br-j32#w463_0" docsrc="br-j32">
      <context> the list of dictionary forms and the file of information that pertains to these forms . A more detailed description of dictionary operations - text lookup and dictionary modification - give a clearer picture . Text lookup , as we will describe it , consists_of three steps . The first is compiling a list of text forms , assigning an information cell to each , and replacing <head>text</head> occurrences with the information cell assigned to the form of each occurrence . For this step the computer memory is separated into three regions : cells in the W_region are used for storage of the forms in the text form list ; cells in the X-region and Y_region are reserved as information cells for text forms . When an occurrence * * f is isolated during text reading , a random_memory address * * f , the address of a cell in the X-region , is computed from the form of * * f . Let * * f denote the form of * * f .</context>
    </instance>
    <instance id="br-j32#w502_0" docsrc="br-j32">
      <context> A more detailed description of dictionary operations - text lookup and dictionary modification - give a clearer picture . Text lookup , as we will describe it , consists_of three steps . The first is compiling a list of text forms , assigning an information cell to each , and replacing text occurrences with the information cell assigned to the form of each occurrence . For this step the computer memory is separated into three regions : cells in the W_region are used for storage of the forms in the <head>text</head> form list ; cells in the X-region and Y_region are reserved as information cells for text forms . When an occurrence * * f is isolated during text reading , a random_memory address * * f , the address of a cell in the X-region , is computed from the form of * * f . Let * * f denote the form of * * f . If cell * * f has not previously been assigned as the information cell of a form in the text form list , it is now assigned as the information cell of * * f .</context>
    </instance>
    <instance id="br-j32#w518_0" docsrc="br-j32">
      <context> A more detailed description of dictionary operations - text lookup and dictionary modification - give a clearer picture . Text lookup , as we will describe it , consists_of three steps . The first is compiling a list of text forms , assigning an information cell to each , and replacing text occurrences with the information cell assigned to the form of each occurrence . For this step the computer memory is separated into three regions : cells in the W_region are used for storage of the forms in the text form list ; cells in the X-region and Y_region are reserved as information cells for <head>text</head> forms . When an occurrence * * f is isolated during text reading , a random_memory address * * f , the address of a cell in the X-region , is computed from the form of * * f . Let * * f denote the form of * * f . If cell * * f has not previously been assigned as the information cell of a form in the text form list , it is now assigned as the information cell of * * f .</context>
    </instance>
    <instance id="br-j32#w530_0" docsrc="br-j32">
      <context> Text lookup , as we will describe it , consists_of three steps . The first is compiling a list of text forms , assigning an information cell to each , and replacing text occurrences with the information cell assigned to the form of each occurrence . For this step the computer memory is separated into three regions : cells in the W_region are used for storage of the forms in the text form list ; cells in the X-region and Y_region are reserved as information cells for text forms . When an occurrence * * f is isolated during <head>text</head> reading , a random_memory address * * f , the address of a cell in the X-region , is computed from the form of * * f . Let * * f denote the form of * * f . If cell * * f has not previously been assigned as the information cell of a form in the text form list , it is now assigned as the information cell of * * f . The form itself is stored in the next available cells of the W-region , beginning in cell * * f .</context>
    </instance>
    <instance id="br-j32#w590_0" docsrc="br-j32">
      <context> For this step the computer memory is separated into three regions : cells in the W_region are used for storage of the forms in the text form list ; cells in the X-region and Y_region are reserved as information cells for text forms . When an occurrence * * f is isolated during text reading , a random_memory address * * f , the address of a cell in the X-region , is computed from the form of * * f . Let * * f denote the form of * * f . If cell * * f has not previously been assigned as the information cell of a form in the <head>text</head> form list , it is now assigned as the information cell of * * f . The form itself is stored in the next available cells of the W-region , beginning in cell * * f . The address * * f and the number of cells required to store the form are written in * * f ; the information cell * * f is saved to represent the text occurrence . Text reading continues with the next occurrence .</context>
    </instance>
    <instance id="br-j32#w661_0" docsrc="br-j32">
      <context> Let * * f denote the form of * * f . If cell * * f has not previously been assigned as the information cell of a form in the text form list , it is now assigned as the information cell of * * f . The form itself is stored in the next available cells of the W-region , beginning in cell * * f . The address * * f and the number of cells required to store the form are written in * * f ; the information cell * * f is saved to represent the <head>text</head> occurrence . Text reading continues with the next occurrence . Let us assume that * * f is identical to the form of an occurrence * * f which preceded * * f in the text . When this situation exists , the address * * f will equal * * f which was produced from * * f .</context>
    </instance>
    <instance id="br-j32#w664_0" docsrc="br-j32">
      <context> If cell * * f has not previously been assigned as the information cell of a form in the text form list , it is now assigned as the information cell of * * f . The form itself is stored in the next available cells of the W-region , beginning in cell * * f . The address * * f and the number of cells required to store the form are written in * * f ; the information cell * * f is saved to represent the text occurrence . <head>Text</head> reading continues with the next occurrence . Let us assume that * * f is identical to the form of an occurrence * * f which preceded * * f in the text . When this situation exists , the address * * f will equal * * f which was produced from * * f . If * * f was assigned as the information cell for * * f , the routine can detect that * * f is identical to * * f by comparing * * f with the form stored at location * * f .</context>
    </instance>
    <instance id="br-j32#w697_0" docsrc="br-j32">
      <context> The form itself is stored in the next available cells of the W-region , beginning in cell * * f . The address * * f and the number of cells required to store the form are written in * * f ; the information cell * * f is saved to represent the text occurrence . Text reading continues with the next occurrence . Let us assume that * * f is identical to the form of an occurrence * * f which preceded * * f in the <head>text</head> . When this situation exists , the address * * f will equal * * f which was produced from * * f . If * * f was assigned as the information cell for * * f , the routine can detect that * * f is identical to * * f by comparing * * f with the form stored at location * * f . The address * * f is stored in the cell * * f .</context>
    </instance>
    <instance id="br-j32#w71_0" docsrc="br-j32">
      <context> The many linguistic techniques for reducing the amount of dictionary information that have been proposed all organize the dictionary 's contents around prefixes , stems , suffixes , etc. . A significant reduction in the voume of store information is thus realized , especially for a highly inflected language such_as Russian . For English the reduction in size is less striking . This approach requires that : ( 1 ) each <head>text</head> word be separated into smaller elements to establish a correspondence between the occurrence and dictionary_entries , and ( 2 ) the information retrieved from several entries in the dictionary be synthesized into a description of the particular word . The logical scheme used to accomplish the former influences the placement of information in the dictionary file . Implementation of the latter requires storage of information needed only for synthesis . We suggest the application of certain data-processing techniques as a solution to the problem .</context>
    </instance>
    <instance id="br-j32#w806_0" docsrc="br-j32">
      <context> If * * f was assigned as the information cell for * * f , the routine can detect that * * f is identical to * * f by comparing * * f with the form stored at location * * f . The address * * f is stored in the cell * * f . When , as in_this case , the two forms match , the address * * f is saved to represent the occurrence * * f . <head>Text</head> reading continues with the next occurrence . A third situation is possible . The formula for computing random addresses from the form of each occurrence will not give a distinct address for each distinct form . Thus , when more_than one distinct form leads to a particular cell in the X-region , a chain of information cells must be created to accommodate the forms , one cell in the chain for each form .</context>
    </instance>
  </lexelt>
</corpus>
